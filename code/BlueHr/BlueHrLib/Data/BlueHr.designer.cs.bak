#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueHrLib.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BlueHr")]
	public partial class BlueHrDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAbsenceType(AbsenceType instance);
    partial void UpdateAbsenceType(AbsenceType instance);
    partial void DeleteAbsenceType(AbsenceType instance);
    partial void InsertAttendanceRecordCal(AttendanceRecordCal instance);
    partial void UpdateAttendanceRecordCal(AttendanceRecordCal instance);
    partial void DeleteAttendanceRecordCal(AttendanceRecordCal instance);
    partial void InsertAttendanceRecordDetail(AttendanceRecordDetail instance);
    partial void UpdateAttendanceRecordDetail(AttendanceRecordDetail instance);
    partial void DeleteAttendanceRecordDetail(AttendanceRecordDetail instance);
    partial void InsertBankCard(BankCard instance);
    partial void UpdateBankCard(BankCard instance);
    partial void DeleteBankCard(BankCard instance);
    partial void InsertCertificate(Certificate instance);
    partial void UpdateCertificate(Certificate instance);
    partial void DeleteCertificate(Certificate instance);
    partial void InsertCertificateType(CertificateType instance);
    partial void UpdateCertificateType(CertificateType instance);
    partial void DeleteCertificateType(CertificateType instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertDegreeType(DegreeType instance);
    partial void UpdateDegreeType(DegreeType instance);
    partial void DeleteDegreeType(DegreeType instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertFamilyMemeber(FamilyMemeber instance);
    partial void UpdateFamilyMemeber(FamilyMemeber instance);
    partial void DeleteFamilyMemeber(FamilyMemeber instance);
    partial void InsertFullMemberRecord(FullMemberRecord instance);
    partial void UpdateFullMemberRecord(FullMemberRecord instance);
    partial void DeleteFullMemberRecord(FullMemberRecord instance);
    partial void InsertInsureType(InsureType instance);
    partial void UpdateInsureType(InsureType instance);
    partial void DeleteInsureType(InsureType instance);
    partial void InsertJobCertificate(JobCertificate instance);
    partial void UpdateJobCertificate(JobCertificate instance);
    partial void DeleteJobCertificate(JobCertificate instance);
    partial void InsertJobTitle(JobTitle instance);
    partial void UpdateJobTitle(JobTitle instance);
    partial void DeleteJobTitle(JobTitle instance);
    partial void InsertMessageRecord(MessageRecord instance);
    partial void UpdateMessageRecord(MessageRecord instance);
    partial void DeleteMessageRecord(MessageRecord instance);
    partial void InsertQuartzJob(QuartzJob instance);
    partial void UpdateQuartzJob(QuartzJob instance);
    partial void DeleteQuartzJob(QuartzJob instance);
    partial void InsertResignRecord(ResignRecord instance);
    partial void UpdateResignRecord(ResignRecord instance);
    partial void DeleteResignRecord(ResignRecord instance);
    partial void InsertResignType(ResignType instance);
    partial void UpdateResignType(ResignType instance);
    partial void DeleteResignType(ResignType instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InsertShiftSchedule(ShiftSchedule instance);
    partial void UpdateShiftSchedule(ShiftSchedule instance);
    partial void DeleteShiftSchedule(ShiftSchedule instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertStaffType(StaffType instance);
    partial void UpdateStaffType(StaffType instance);
    partial void DeleteStaffType(StaffType instance);
    partial void InsertSystemSetting(SystemSetting instance);
    partial void UpdateSystemSetting(SystemSetting instance);
    partial void DeleteSystemSetting(SystemSetting instance);
    partial void InsertTaskRound(TaskRound instance);
    partial void UpdateTaskRound(TaskRound instance);
    partial void DeleteTaskRound(TaskRound instance);
    partial void InsertAbsenceRecrod(AbsenceRecrod instance);
    partial void UpdateAbsenceRecrod(AbsenceRecrod instance);
    partial void DeleteAbsenceRecrod(AbsenceRecrod instance);
 
    partial void InsertExtraWorkType(ExtraWorkType instance);
    partial void UpdateExtraWorkType(ExtraWorkType instance);
    partial void DeleteExtraWorkType(ExtraWorkType instance);
    partial void InsertExtraWorkRecord(ExtraWorkRecord instance);
    partial void UpdateExtraWorkRecord(ExtraWorkRecord instance);
    partial void DeleteExtraWorkRecord(ExtraWorkRecord instance);
 
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
 
    #endregion
		
		public BlueHrDataContext() : 
				base(global::BlueHrLib.Properties.Settings.Default.BlueHrConnectionString7, mappingSource)
		{
			OnCreated();
		}
		
		public BlueHrDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlueHrDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlueHrDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlueHrDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<AbsenceType> AbsenceType
		{
			get
			{
				return this.GetTable<AbsenceType>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceRecordCal> AttendanceRecordCal
		{
			get
			{
				return this.GetTable<AttendanceRecordCal>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceRecordDetail> AttendanceRecordDetail
		{
			get
			{
				return this.GetTable<AttendanceRecordDetail>();
			}
		}
		
		public System.Data.Linq.Table<BankCard> BankCard
		{
			get
			{
				return this.GetTable<BankCard>();
			}
		}
		
		public System.Data.Linq.Table<Certificate> Certificate
		{
			get
			{
				return this.GetTable<Certificate>();
			}
		}
		
		public System.Data.Linq.Table<CertificateType> CertificateType
		{
			get
			{
				return this.GetTable<CertificateType>();
			}
		}
		
		public System.Data.Linq.Table<Company> Company
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<DegreeType> DegreeType
		{
			get
			{
				return this.GetTable<DegreeType>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<FamilyMemeber> FamilyMemeber
		{
			get
			{
				return this.GetTable<FamilyMemeber>();
			}
		}
		
		public System.Data.Linq.Table<FullMemberRecord> FullMemberRecord
		{
			get
			{
				return this.GetTable<FullMemberRecord>();
			}
		}
		
		public System.Data.Linq.Table<InsureType> InsureType
		{
			get
			{
				return this.GetTable<InsureType>();
			}
		}
		
		public System.Data.Linq.Table<JobCertificate> JobCertificate
		{
			get
			{
				return this.GetTable<JobCertificate>();
			}
		}
		
		public System.Data.Linq.Table<JobTitle> JobTitle
		{
			get
			{
				return this.GetTable<JobTitle>();
			}
		}
		
		public System.Data.Linq.Table<MessageRecord> MessageRecord
		{
			get
			{
				return this.GetTable<MessageRecord>();
			}
		}
		
		public System.Data.Linq.Table<QuartzJob> QuartzJob
		{
			get
			{
				return this.GetTable<QuartzJob>();
			}
		}
		
		public System.Data.Linq.Table<ResignRecord> ResignRecord
		{
			get
			{
				return this.GetTable<ResignRecord>();
			}
		}
		
		public System.Data.Linq.Table<ResignType> ResignType
		{
			get
			{
				return this.GetTable<ResignType>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shift
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<ShiftSchedule> ShiftSchedule
		{
			get
			{
				return this.GetTable<ShiftSchedule>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staff
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<StaffType> StaffType
		{
			get
			{
				return this.GetTable<StaffType>();
			}
		}
		
		public System.Data.Linq.Table<SystemSetting> SystemSetting
		{
			get
			{
				return this.GetTable<SystemSetting>();
			}
		}
		
		public System.Data.Linq.Table<TaskRound> TaskRound
		{
			get
			{
				return this.GetTable<TaskRound>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceRecordCalExceptionView> AttendanceRecordCalExceptionView
		{
			get
			{
				return this.GetTable<AttendanceRecordCalExceptionView>();
			}
		}
		
		public System.Data.Linq.Table<ShiftScheduleView> ShiftScheduleView
		{
			get
			{
				return this.GetTable<ShiftScheduleView>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceRecordCalView> AttendanceRecordCalView
		{
			get
			{
				return this.GetTable<AttendanceRecordCalView>();
			}
		}
		
		public System.Data.Linq.Table<AttendanceRecordDetailView> AttendanceRecordDetailView
		{
			get
			{
				return this.GetTable<AttendanceRecordDetailView>();
			}
		}
		
		public System.Data.Linq.Table<MessageRecordView> MessageRecordView
		{
			get
			{
				return this.GetTable<MessageRecordView>();
			}
		}
		
		public System.Data.Linq.Table<AbsenceRecrod> AbsenceRecrod
		{
			get
			{
				return this.GetTable<AbsenceRecrod>();
			}
		}
		
 
		public System.Data.Linq.Table<ExtraWorkType> ExtraWorkType
		{
			get
			{
				return this.GetTable<ExtraWorkType>();
			}
		}
		
		public System.Data.Linq.Table<ExtraWorkRecord> ExtraWorkRecord
        {
            get
            {
                return this.GetTable<ExtraWorkRecord>();
            }
        }
		public System.Data.Linq.Table<Attachment> Attachments
		{
			get
			{
				return this.GetTable<Attachment>();
 
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _pwd;
		
		private System.Nullable<bool> _isLocked;
		
		private System.Nullable<int> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void OnisLockedChanging(System.Nullable<bool> value);
    partial void OnisLockedChanged();
    partial void OnroleChanging(System.Nullable<int> value);
    partial void OnroleChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLocked", DbType="Bit")]
		public System.Nullable<bool> isLocked
		{
			get
			{
				return this._isLocked;
			}
			set
			{
				if ((this._isLocked != value))
				{
					this.OnisLockedChanging(value);
					this.SendPropertyChanging();
					this._isLocked = value;
					this.SendPropertyChanged("isLocked");
					this.OnisLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int")]
		public System.Nullable<int> role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbsenceType")]
	public partial class AbsenceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<AbsenceRecrod> _AbsenceRecrod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public AbsenceType()
		{
			this._AbsenceRecrod = new EntitySet<AbsenceRecrod>(new Action<AbsenceRecrod>(this.attach_AbsenceRecrod), new Action<AbsenceRecrod>(this.detach_AbsenceRecrod));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AbsenceType_AbsenceRecrod", Storage="_AbsenceRecrod", ThisKey="id", OtherKey="absenceTypeId")]
		public EntitySet<AbsenceRecrod> AbsenceRecrod
		{
			get
			{
				return this._AbsenceRecrod;
			}
			set
			{
				this._AbsenceRecrod.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AbsenceRecrod(AbsenceRecrod entity)
		{
			this.SendPropertyChanging();
			entity.AbsenceType = this;
		}
		
		private void detach_AbsenceRecrod(AbsenceRecrod entity)
		{
			this.SendPropertyChanging();
			entity.AbsenceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceRecordCal")]
	public partial class AttendanceRecordCal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffNr;
		
		private double _oriWorkingHour;
		
		private System.DateTime _attendanceDate;
		
		private double _actWorkingHour;
		
		private string _remark;
		
		private System.DateTime _createdAt;
		
		private bool _isManualCal;
		
		private bool _isException;
		
		private string _exceptionCodes;
		
		private System.Nullable<bool> _isExceptionHandled;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OnoriWorkingHourChanging(double value);
    partial void OnoriWorkingHourChanged();
    partial void OnattendanceDateChanging(System.DateTime value);
    partial void OnattendanceDateChanged();
    partial void OnactWorkingHourChanging(double value);
    partial void OnactWorkingHourChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OncreatedAtChanging(System.DateTime value);
    partial void OncreatedAtChanged();
    partial void OnisManualCalChanging(bool value);
    partial void OnisManualCalChanged();
    partial void OnisExceptionChanging(bool value);
    partial void OnisExceptionChanged();
    partial void OnexceptionCodesChanging(string value);
    partial void OnexceptionCodesChanged();
    partial void OnisExceptionHandledChanging(System.Nullable<bool> value);
    partial void OnisExceptionHandledChanged();
    #endregion
		
		public AttendanceRecordCal()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oriWorkingHour", DbType="Float NOT NULL")]
		public double oriWorkingHour
		{
			get
			{
				return this._oriWorkingHour;
			}
			set
			{
				if ((this._oriWorkingHour != value))
				{
					this.OnoriWorkingHourChanging(value);
					this.SendPropertyChanging();
					this._oriWorkingHour = value;
					this.SendPropertyChanged("oriWorkingHour");
					this.OnoriWorkingHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendanceDate", DbType="DateTime NOT NULL")]
		public System.DateTime attendanceDate
		{
			get
			{
				return this._attendanceDate;
			}
			set
			{
				if ((this._attendanceDate != value))
				{
					this.OnattendanceDateChanging(value);
					this.SendPropertyChanging();
					this._attendanceDate = value;
					this.SendPropertyChanged("attendanceDate");
					this.OnattendanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actWorkingHour", DbType="Float NOT NULL")]
		public double actWorkingHour
		{
			get
			{
				return this._actWorkingHour;
			}
			set
			{
				if ((this._actWorkingHour != value))
				{
					this.OnactWorkingHourChanging(value);
					this.SendPropertyChanging();
					this._actWorkingHour = value;
					this.SendPropertyChanged("actWorkingHour");
					this.OnactWorkingHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime NOT NULL")]
		public System.DateTime createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isManualCal", DbType="Bit NOT NULL")]
		public bool isManualCal
		{
			get
			{
				return this._isManualCal;
			}
			set
			{
				if ((this._isManualCal != value))
				{
					this.OnisManualCalChanging(value);
					this.SendPropertyChanging();
					this._isManualCal = value;
					this.SendPropertyChanged("isManualCal");
					this.OnisManualCalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isException", DbType="Bit NOT NULL")]
		public bool isException
		{
			get
			{
				return this._isException;
			}
			set
			{
				if ((this._isException != value))
				{
					this.OnisExceptionChanging(value);
					this.SendPropertyChanging();
					this._isException = value;
					this.SendPropertyChanged("isException");
					this.OnisExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exceptionCodes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string exceptionCodes
		{
			get
			{
				return this._exceptionCodes;
			}
			set
			{
				if ((this._exceptionCodes != value))
				{
					this.OnexceptionCodesChanging(value);
					this.SendPropertyChanging();
					this._exceptionCodes = value;
					this.SendPropertyChanged("exceptionCodes");
					this.OnexceptionCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExceptionHandled", DbType="Bit")]
		public System.Nullable<bool> isExceptionHandled
		{
			get
			{
				return this._isExceptionHandled;
			}
			set
			{
				if ((this._isExceptionHandled != value))
				{
					this.OnisExceptionHandledChanging(value);
					this.SendPropertyChanging();
					this._isExceptionHandled = value;
					this.SendPropertyChanged("isExceptionHandled");
					this.OnisExceptionHandledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_AttendanceRecordCal", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.AttendanceRecordCal.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.AttendanceRecordCal.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceRecordDetail")]
	public partial class AttendanceRecordDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffNr;
		
		private System.DateTime _recordAt;
		
		private System.Nullable<System.DateTime> _createdAt;
		
		private string _soureType;
		
		private bool _isCalculated;
		
		private string _device;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OnrecordAtChanging(System.DateTime value);
    partial void OnrecordAtChanged();
    partial void OncreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedAtChanged();
    partial void OnsoureTypeChanging(string value);
    partial void OnsoureTypeChanged();
    partial void OnisCalculatedChanging(bool value);
    partial void OnisCalculatedChanged();
    partial void OndeviceChanging(string value);
    partial void OndeviceChanged();
    #endregion
		
		public AttendanceRecordDetail()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recordAt", DbType="DateTime NOT NULL")]
		public System.DateTime recordAt
		{
			get
			{
				return this._recordAt;
			}
			set
			{
				if ((this._recordAt != value))
				{
					this.OnrecordAtChanging(value);
					this.SendPropertyChanging();
					this._recordAt = value;
					this.SendPropertyChanged("recordAt");
					this.OnrecordAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soureType", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string soureType
		{
			get
			{
				return this._soureType;
			}
			set
			{
				if ((this._soureType != value))
				{
					this.OnsoureTypeChanging(value);
					this.SendPropertyChanging();
					this._soureType = value;
					this.SendPropertyChanged("soureType");
					this.OnsoureTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCalculated", DbType="Bit NOT NULL")]
		public bool isCalculated
		{
			get
			{
				return this._isCalculated;
			}
			set
			{
				if ((this._isCalculated != value))
				{
					this.OnisCalculatedChanging(value);
					this.SendPropertyChanging();
					this._isCalculated = value;
					this.SendPropertyChanged("isCalculated");
					this.OnisCalculatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_device", DbType="VarChar(50)")]
		public string device
		{
			get
			{
				return this._device;
			}
			set
			{
				if ((this._device != value))
				{
					this.OndeviceChanging(value);
					this.SendPropertyChanging();
					this._device = value;
					this.SendPropertyChanged("device");
					this.OndeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_AttendanceRecordDetail", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.AttendanceRecordDetail.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.AttendanceRecordDetail.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankCard")]
	public partial class BankCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nr;
		
		private string _bank;
		
		private string _bankAddress;
		
		private string _remark;
		
		private bool _isDefault;
		
		private string _staffNr;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnrChanging(string value);
    partial void OnnrChanged();
    partial void OnbankChanging(string value);
    partial void OnbankChanged();
    partial void OnbankAddressChanging(string value);
    partial void OnbankAddressChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnisDefaultChanging(bool value);
    partial void OnisDefaultChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    #endregion
		
		public BankCard()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nr
		{
			get
			{
				return this._nr;
			}
			set
			{
				if ((this._nr != value))
				{
					this.OnnrChanging(value);
					this.SendPropertyChanging();
					this._nr = value;
					this.SendPropertyChanged("nr");
					this.OnnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="VarChar(50)")]
		public string bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankAddress", DbType="VarChar(50)")]
		public string bankAddress
		{
			get
			{
				return this._bankAddress;
			}
			set
			{
				if ((this._bankAddress != value))
				{
					this.OnbankAddressChanging(value);
					this.SendPropertyChanging();
					this._bankAddress = value;
					this.SendPropertyChanged("bankAddress");
					this.OnbankAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDefault", DbType="Bit NOT NULL")]
		public bool isDefault
		{
			get
			{
				return this._isDefault;
			}
			set
			{
				if ((this._isDefault != value))
				{
					this.OnisDefaultChanging(value);
					this.SendPropertyChanging();
					this._isDefault = value;
					this.SendPropertyChanged("isDefault");
					this.OnisDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_BankCard", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.BankCard.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.BankCard.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Certificate")]
	public partial class Certificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffNr;
		
		private int _certificateTypeId;
		
		private string _certiLevel;
		
		private System.Nullable<System.DateTime> _effectiveFrom;
		
		private System.Nullable<System.DateTime> _effectiveEnd;
		
		private string _institution;
		
		private string _remark;
		
		private EntitySet<Attachment> _Attachments;
		
		private EntityRef<CertificateType> _CertificateType;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OncertificateTypeIdChanging(int value);
    partial void OncertificateTypeIdChanged();
    partial void OncertiLevelChanging(string value);
    partial void OncertiLevelChanged();
    partial void OneffectiveFromChanging(System.Nullable<System.DateTime> value);
    partial void OneffectiveFromChanged();
    partial void OneffectiveEndChanging(System.Nullable<System.DateTime> value);
    partial void OneffectiveEndChanged();
    partial void OninstitutionChanging(string value);
    partial void OninstitutionChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public Certificate()
		{
			this._Attachments = new EntitySet<Attachment>(new Action<Attachment>(this.attach_Attachments), new Action<Attachment>(this.detach_Attachments));
			this._CertificateType = default(EntityRef<CertificateType>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateTypeId", DbType="Int NOT NULL")]
		public int certificateTypeId
		{
			get
			{
				return this._certificateTypeId;
			}
			set
			{
				if ((this._certificateTypeId != value))
				{
					if (this._CertificateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncertificateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._certificateTypeId = value;
					this.SendPropertyChanged("certificateTypeId");
					this.OncertificateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certiLevel", DbType="VarChar(50)")]
		public string certiLevel
		{
			get
			{
				return this._certiLevel;
			}
			set
			{
				if ((this._certiLevel != value))
				{
					this.OncertiLevelChanging(value);
					this.SendPropertyChanging();
					this._certiLevel = value;
					this.SendPropertyChanged("certiLevel");
					this.OncertiLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectiveFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> effectiveFrom
		{
			get
			{
				return this._effectiveFrom;
			}
			set
			{
				if ((this._effectiveFrom != value))
				{
					this.OneffectiveFromChanging(value);
					this.SendPropertyChanging();
					this._effectiveFrom = value;
					this.SendPropertyChanged("effectiveFrom");
					this.OneffectiveFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectiveEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> effectiveEnd
		{
			get
			{
				return this._effectiveEnd;
			}
			set
			{
				if ((this._effectiveEnd != value))
				{
					this.OneffectiveEndChanging(value);
					this.SendPropertyChanging();
					this._effectiveEnd = value;
					this.SendPropertyChanged("effectiveEnd");
					this.OneffectiveEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_institution", DbType="VarChar(200)")]
		public string institution
		{
			get
			{
				return this._institution;
			}
			set
			{
				if ((this._institution != value))
				{
					this.OninstitutionChanging(value);
					this.SendPropertyChanging();
					this._institution = value;
					this.SendPropertyChanged("institution");
					this.OninstitutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certificate_Attachment", Storage="_Attachments", ThisKey="id", OtherKey="certificateId")]
		public EntitySet<Attachment> Attachments
		{
			get
			{
				return this._Attachments;
			}
			set
			{
				this._Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificateType_Certificate", Storage="_CertificateType", ThisKey="certificateTypeId", OtherKey="id", IsForeignKey=true)]
		public CertificateType CertificateType
		{
			get
			{
				return this._CertificateType.Entity;
			}
			set
			{
				CertificateType previousValue = this._CertificateType.Entity;
				if (((previousValue != value) 
							|| (this._CertificateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CertificateType.Entity = null;
						previousValue.Certificate.Remove(this);
					}
					this._CertificateType.Entity = value;
					if ((value != null))
					{
						value.Certificate.Add(this);
						this._certificateTypeId = value.id;
					}
					else
					{
						this._certificateTypeId = default(int);
					}
					this.SendPropertyChanged("CertificateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Certificate", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Certificate.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Certificate.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attachments(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Certificate = this;
		}
		
		private void detach_Attachments(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Certificate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CertificateType")]
	public partial class CertificateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private bool _isSystem;
		
		private bool _isNecessary;
		
		private System.Nullable<int> _systemCode;
		
		private EntitySet<Certificate> _Certificate;
		
		private EntitySet<JobCertificate> _JobCertificate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnisSystemChanging(bool value);
    partial void OnisSystemChanged();
    partial void OnisNecessaryChanging(bool value);
    partial void OnisNecessaryChanged();
    partial void OnsystemCodeChanging(System.Nullable<int> value);
    partial void OnsystemCodeChanged();
    #endregion
		
		public CertificateType()
		{
			this._Certificate = new EntitySet<Certificate>(new Action<Certificate>(this.attach_Certificate), new Action<Certificate>(this.detach_Certificate));
			this._JobCertificate = new EntitySet<JobCertificate>(new Action<JobCertificate>(this.attach_JobCertificate), new Action<JobCertificate>(this.detach_JobCertificate));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSystem", DbType="Bit NOT NULL")]
		public bool isSystem
		{
			get
			{
				return this._isSystem;
			}
			set
			{
				if ((this._isSystem != value))
				{
					this.OnisSystemChanging(value);
					this.SendPropertyChanging();
					this._isSystem = value;
					this.SendPropertyChanged("isSystem");
					this.OnisSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isNecessary", DbType="Bit NOT NULL")]
		public bool isNecessary
		{
			get
			{
				return this._isNecessary;
			}
			set
			{
				if ((this._isNecessary != value))
				{
					this.OnisNecessaryChanging(value);
					this.SendPropertyChanging();
					this._isNecessary = value;
					this.SendPropertyChanged("isNecessary");
					this.OnisNecessaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemCode", DbType="Int")]
		public System.Nullable<int> systemCode
		{
			get
			{
				return this._systemCode;
			}
			set
			{
				if ((this._systemCode != value))
				{
					this.OnsystemCodeChanging(value);
					this.SendPropertyChanging();
					this._systemCode = value;
					this.SendPropertyChanged("systemCode");
					this.OnsystemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificateType_Certificate", Storage="_Certificate", ThisKey="id", OtherKey="certificateTypeId")]
		public EntitySet<Certificate> Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				this._Certificate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificateType_JobCertificate", Storage="_JobCertificate", ThisKey="id", OtherKey="certificateTypeId")]
		public EntitySet<JobCertificate> JobCertificate
		{
			get
			{
				return this._JobCertificate;
			}
			set
			{
				this._JobCertificate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Certificate(Certificate entity)
		{
			this.SendPropertyChanging();
			entity.CertificateType = this;
		}
		
		private void detach_Certificate(Certificate entity)
		{
			this.SendPropertyChanging();
			entity.CertificateType = null;
		}
		
		private void attach_JobCertificate(JobCertificate entity)
		{
			this.SendPropertyChanging();
			entity.CertificateType = this;
		}
		
		private void detach_JobCertificate(JobCertificate entity)
		{
			this.SendPropertyChanging();
			entity.CertificateType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private string _address;
		
		private EntitySet<Department> _Department;
		
		private EntitySet<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Company()
		{
			this._Department = new EntitySet<Department>(new Action<Department>(this.attach_Department), new Action<Department>(this.detach_Department));
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Department", Storage="_Department", ThisKey="id", OtherKey="companyId")]
		public EntitySet<Department> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				this._Department.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Staff", Storage="_Staff", ThisKey="id", OtherKey="companyId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DegreeType")]
	public partial class DegreeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public DegreeType()
		{
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DegreeType_Staff", Storage="_Staff", ThisKey="id", OtherKey="degreeTypeId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.DegreeType = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.DegreeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private System.Nullable<int> _companyId;
		
		private EntitySet<Staff> _Staff;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OncompanyIdChanging(System.Nullable<int> value);
    partial void OncompanyIdChanged();
    #endregion
		
		public Department()
		{
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="Int")]
		public System.Nullable<int> companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Staff", Storage="_Staff", ThisKey="id", OtherKey="departmentId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Department", Storage="_Company", ThisKey="companyId", OtherKey="id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Department.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Department.Add(this);
						this._companyId = value.id;
					}
					else
					{
						this._companyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyMemeber")]
	public partial class FamilyMemeber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _memberName;
		
		private string _familyMemberType;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _staffNr;
		
		private EntityRef<Staff> _Staff;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmemberNameChanging(string value);
    partial void OnmemberNameChanged();
    partial void OnfamilyMemberTypeChanging(string value);
    partial void OnfamilyMemberTypeChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    #endregion
		
		public FamilyMemeber()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string memberName
		{
			get
			{
				return this._memberName;
			}
			set
			{
				if ((this._memberName != value))
				{
					this.OnmemberNameChanging(value);
					this.SendPropertyChanging();
					this._memberName = value;
					this.SendPropertyChanged("memberName");
					this.OnmemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_familyMemberType", DbType="VarChar(50)")]
		public string familyMemberType
		{
			get
			{
				return this._familyMemberType;
			}
			set
			{
				if ((this._familyMemberType != value))
				{
					this.OnfamilyMemberTypeChanging(value);
					this.SendPropertyChanging();
					this._familyMemberType = value;
					this.SendPropertyChanged("familyMemberType");
					this.OnfamilyMemberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200)")]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FamilyMemeber", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FamilyMemeber.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FamilyMemeber.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FullMemberRecord")]
	public partial class FullMemberRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffNr;
		
		private bool _isPassCheck;
		
		private System.Nullable<System.DateTime> _beFullAt;
		
		private System.Nullable<System.DateTime> _checkAt;
		
		private string _beFullChecker;
		
		private System.Nullable<double> _checkScore;
		
		private string _remark;
		
 
		private EntityRef<Staff> _Staff;
		
    #region 可扩展性方法定义
 
    #region Extensibility Method Definitions
 
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OnisPassCheckChanging(bool value);
    partial void OnisPassCheckChanged();
    partial void OnbeFullAtChanging(System.Nullable<System.DateTime> value);
    partial void OnbeFullAtChanged();
    partial void OncheckAtChanging(System.Nullable<System.DateTime> value);
    partial void OncheckAtChanged();
    partial void OnbeFullCheckerChanging(string value);
    partial void OnbeFullCheckerChanged();
    partial void OncheckScoreChanging(System.Nullable<double> value);
    partial void OncheckScoreChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public FullMemberRecord()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPassCheck", DbType="Bit NOT NULL")]
		public bool isPassCheck
		{
			get
			{
				return this._isPassCheck;
			}
			set
			{
				if ((this._isPassCheck != value))
				{
					this.OnisPassCheckChanging(value);
					this.SendPropertyChanging();
					this._isPassCheck = value;
					this.SendPropertyChanged("isPassCheck");
					this.OnisPassCheckChanged();
				}
			}
		}
<<<<<<< HEAD
=======
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyMemeber")]
	public partial class FamilyMemeber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _memberName;
		
		private string _familyMemberType;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _staffNr;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmemberNameChanging(string value);
    partial void OnmemberNameChanged();
    partial void OnfamilyMemberTypeChanging(string value);
    partial void OnfamilyMemberTypeChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    #endregion
		
		public FamilyMemeber()
		{
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
>>>>>>> 822b977b65a3f6936417d6de055ad7f6d01458c4
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beFullAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> beFullAt
		{
			get
			{
				return this._beFullAt;
			}
			set
			{
				if ((this._beFullAt != value))
				{
					this.OnbeFullAtChanging(value);
					this.SendPropertyChanging();
					this._beFullAt = value;
					this.SendPropertyChanged("beFullAt");
					this.OnbeFullAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> checkAt
		{
			get
			{
				return this._checkAt;
			}
			set
			{
				if ((this._checkAt != value))
				{
					this.OncheckAtChanging(value);
					this.SendPropertyChanging();
					this._checkAt = value;
					this.SendPropertyChanged("checkAt");
					this.OncheckAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beFullChecker", DbType="VarChar(50)")]
		public string beFullChecker
		{
			get
			{
				return this._beFullChecker;
			}
			set
			{
				if ((this._beFullChecker != value))
				{
					this.OnbeFullCheckerChanging(value);
					this.SendPropertyChanging();
					this._beFullChecker = value;
					this.SendPropertyChanged("beFullChecker");
					this.OnbeFullCheckerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkScore", DbType="Float")]
		public System.Nullable<double> checkScore
		{
			get
			{
				return this._checkScore;
			}
			set
			{
				if ((this._checkScore != value))
				{
					this.OncheckScoreChanging(value);
					this.SendPropertyChanging();
					this._checkScore = value;
					this.SendPropertyChanged("checkScore");
					this.OncheckScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FullMemberRecord", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FullMemberRecord.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FullMemberRecord.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InsureType")]
	public partial class InsureType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public InsureType()
		{
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsureType_Staff", Storage="_Staff", ThisKey="id", OtherKey="insureTypeId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
<<<<<<< HEAD
=======
				return this._checkAt;
			}
			set
			{
				if ((this._checkAt != value))
				{
					this.OncheckAtChanging(value);
					this.SendPropertyChanging();
					this._checkAt = value;
					this.SendPropertyChanged("checkAt");
					this.OncheckAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beFullChecker", DbType="VarChar(50)")]
		public string beFullChecker
		{
			get
			{
				return this._beFullChecker;
			}
			set
			{
				if ((this._beFullChecker != value))
				{
					this.OnbeFullCheckerChanging(value);
					this.SendPropertyChanging();
					this._beFullChecker = value;
					this.SendPropertyChanged("beFullChecker");
					this.OnbeFullCheckerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkScore", DbType="Float")]
		public System.Nullable<double> checkScore
		{
			get
			{
				return this._checkScore;
			}
			set
			{
				if ((this._checkScore != value))
				{
					this.OncheckScoreChanging(value);
					this.SendPropertyChanging();
					this._checkScore = value;
					this.SendPropertyChanged("checkScore");
					this.OncheckScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FullMemberRecord", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.FullMemberRecord.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.FullMemberRecord.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InsureType")]
	public partial class InsureType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public InsureType()
		{
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsureType_Staff", Storage="_Staff", ThisKey="id", OtherKey="insureTypeId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
>>>>>>> 822b977b65a3f6936417d6de055ad7f6d01458c4
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.InsureType = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.InsureType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobCertificate")]
	public partial class JobCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _jobTitleId;
		
		private int _certificateTypeId;
		
		private EntityRef<CertificateType> _CertificateType;
		
		private EntityRef<JobTitle> _JobTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnjobTitleIdChanging(int value);
    partial void OnjobTitleIdChanged();
    partial void OncertificateTypeIdChanging(int value);
    partial void OncertificateTypeIdChanged();
    #endregion
		
		public JobCertificate()
		{
			this._CertificateType = default(EntityRef<CertificateType>);
			this._JobTitle = default(EntityRef<JobTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitleId", DbType="Int NOT NULL")]
		public int jobTitleId
		{
			get
			{
				return this._jobTitleId;
			}
			set
			{
				if ((this._jobTitleId != value))
				{
					if (this._JobTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._jobTitleId = value;
					this.SendPropertyChanged("jobTitleId");
					this.OnjobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateTypeId", DbType="Int NOT NULL")]
		public int certificateTypeId
		{
			get
			{
				return this._certificateTypeId;
			}
			set
			{
				if ((this._certificateTypeId != value))
				{
					if (this._CertificateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncertificateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._certificateTypeId = value;
					this.SendPropertyChanged("certificateTypeId");
					this.OncertificateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CertificateType_JobCertificate", Storage="_CertificateType", ThisKey="certificateTypeId", OtherKey="id", IsForeignKey=true)]
		public CertificateType CertificateType
		{
			get
			{
				return this._CertificateType.Entity;
			}
			set
			{
				CertificateType previousValue = this._CertificateType.Entity;
				if (((previousValue != value) 
							|| (this._CertificateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CertificateType.Entity = null;
						previousValue.JobCertificate.Remove(this);
					}
					this._CertificateType.Entity = value;
					if ((value != null))
					{
						value.JobCertificate.Add(this);
						this._certificateTypeId = value.id;
					}
					else
					{
						this._certificateTypeId = default(int);
					}
					this.SendPropertyChanged("CertificateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitle_JobCertificate", Storage="_JobTitle", ThisKey="jobTitleId", OtherKey="id", IsForeignKey=true)]
		public JobTitle JobTitle
		{
			get
			{
				return this._JobTitle.Entity;
			}
			set
			{
				JobTitle previousValue = this._JobTitle.Entity;
				if (((previousValue != value) 
							|| (this._JobTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitle.Entity = null;
						previousValue.JobCertificate.Remove(this);
					}
					this._JobTitle.Entity = value;
					if ((value != null))
					{
						value.JobCertificate.Add(this);
						this._jobTitleId = value.id;
					}
					else
					{
						this._jobTitleId = default(int);
					}
					this.SendPropertyChanged("JobTitle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobTitle")]
	public partial class JobTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<JobCertificate> _JobCertificate;
		
		private EntitySet<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public JobTitle()
		{
			this._JobCertificate = new EntitySet<JobCertificate>(new Action<JobCertificate>(this.attach_JobCertificate), new Action<JobCertificate>(this.detach_JobCertificate));
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitle_JobCertificate", Storage="_JobCertificate", ThisKey="id", OtherKey="jobTitleId")]
		public EntitySet<JobCertificate> JobCertificate
		{
			get
			{
				return this._JobCertificate;
			}
			set
			{
				this._JobCertificate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitle_Staff", Storage="_Staff", ThisKey="id", OtherKey="jobTitleId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobCertificate(JobCertificate entity)
		{
			this.SendPropertyChanging();
			entity.JobTitle = this;
		}
		
		private void detach_JobCertificate(JobCertificate entity)
		{
			this.SendPropertyChanging();
			entity.JobTitle = null;
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.JobTitle = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.JobTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageRecord")]
	public partial class MessageRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _staffNr;
		
		private System.Nullable<int> _operatorId;
		
		private System.Nullable<int> _messageType;
		
		private System.Nullable<System.DateTime> _createdAt;
		
		private string _text;
		
		private System.Nullable<bool> _isRead;
		
		private System.Nullable<bool> _isHandled;
		
		private string _uniqString;
		
		private System.Nullable<int> _messageCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OnoperatorIdChanging(System.Nullable<int> value);
    partial void OnoperatorIdChanged();
    partial void OnmessageTypeChanging(System.Nullable<int> value);
    partial void OnmessageTypeChanged();
    partial void OncreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedAtChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnisReadChanging(System.Nullable<bool> value);
    partial void OnisReadChanged();
    partial void OnisHandledChanging(System.Nullable<bool> value);
    partial void OnisHandledChanged();
    partial void OnuniqStringChanging(string value);
    partial void OnuniqStringChanged();
    partial void OnmessageCategoryChanging(System.Nullable<int> value);
    partial void OnmessageCategoryChanged();
    #endregion
		
		public MessageRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200)")]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorId", DbType="Int")]
		public System.Nullable<int> operatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this.OnoperatorIdChanging(value);
					this.SendPropertyChanging();
					this._operatorId = value;
					this.SendPropertyChanged("operatorId");
					this.OnoperatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageType", DbType="Int")]
		public System.Nullable<int> messageType
		{
			get
			{
				return this._messageType;
			}
			set
			{
				if ((this._messageType != value))
				{
					this.OnmessageTypeChanging(value);
					this.SendPropertyChanging();
					this._messageType = value;
					this.SendPropertyChanged("messageType");
					this.OnmessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRead", DbType="Bit")]
		public System.Nullable<bool> isRead
		{
			get
			{
				return this._isRead;
			}
			set
			{
				if ((this._isRead != value))
				{
					this.OnisReadChanging(value);
					this.SendPropertyChanging();
					this._isRead = value;
					this.SendPropertyChanged("isRead");
					this.OnisReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHandled", DbType="Bit")]
		public System.Nullable<bool> isHandled
		{
			get
			{
				return this._isHandled;
			}
			set
			{
				if ((this._isHandled != value))
				{
					this.OnisHandledChanging(value);
					this.SendPropertyChanging();
					this._isHandled = value;
					this.SendPropertyChanged("isHandled");
					this.OnisHandledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uniqString", DbType="VarChar(255)")]
		public string uniqString
		{
			get
			{
				return this._uniqString;
			}
			set
			{
				if ((this._uniqString != value))
				{
					this.OnuniqStringChanging(value);
					this.SendPropertyChanging();
					this._uniqString = value;
					this.SendPropertyChanged("uniqString");
					this.OnuniqStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageCategory", DbType="Int")]
		public System.Nullable<int> messageCategory
		{
			get
			{
				return this._messageCategory;
			}
			set
			{
				if ((this._messageCategory != value))
				{
					this.OnmessageCategoryChanging(value);
					this.SendPropertyChanging();
					this._messageCategory = value;
					this.SendPropertyChanged("messageCategory");
					this.OnmessageCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuartzJob")]
	public partial class QuartzJob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _cronSchedule;
		
		private string _params;
		
		private System.Nullable<int> _jobType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncronScheduleChanging(string value);
    partial void OncronScheduleChanged();
    partial void OnparamsChanging(string value);
    partial void OnparamsChanged();
    partial void OnjobTypeChanging(System.Nullable<int> value);
    partial void OnjobTypeChanged();
    #endregion
		
		public QuartzJob()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cronSchedule", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string cronSchedule
		{
			get
			{
				return this._cronSchedule;
			}
			set
			{
				if ((this._cronSchedule != value))
				{
					this.OncronScheduleChanging(value);
					this.SendPropertyChanging();
					this._cronSchedule = value;
					this.SendPropertyChanged("cronSchedule");
					this.OncronScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="params", Storage="_params", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string @params
		{
			get
			{
				return this._params;
			}
			set
			{
				if ((this._params != value))
				{
					this.OnparamsChanging(value);
					this.SendPropertyChanging();
					this._params = value;
					this.SendPropertyChanged("@params");
					this.OnparamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobType", DbType="Int")]
		public System.Nullable<int> jobType
		{
			get
			{
				return this._jobType;
			}
			set
			{
				if ((this._jobType != value))
				{
					this.OnjobTypeChanging(value);
					this.SendPropertyChanging();
					this._jobType = value;
					this.SendPropertyChanged("jobType");
					this.OnjobTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResignRecord")]
	public partial class ResignRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _resignTypeId;
		
		private string _staffNr;
		
		private System.DateTime _resignAt;
		
		private string _resignChecker;
		
		private string _remark;
		
		private EntityRef<ResignType> _ResignType;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnresignTypeIdChanging(int value);
    partial void OnresignTypeIdChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OnresignAtChanging(System.DateTime value);
    partial void OnresignAtChanged();
    partial void OnresignCheckerChanging(string value);
    partial void OnresignCheckerChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public ResignRecord()
		{
			this._ResignType = default(EntityRef<ResignType>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resignTypeId", DbType="Int NOT NULL")]
		public int resignTypeId
		{
			get
			{
				return this._resignTypeId;
			}
			set
			{
				if ((this._resignTypeId != value))
				{
					if (this._ResignType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnresignTypeIdChanging(value);
					this.SendPropertyChanging();
					this._resignTypeId = value;
					this.SendPropertyChanged("resignTypeId");
					this.OnresignTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resignAt", DbType="DateTime NOT NULL")]
		public System.DateTime resignAt
		{
			get
			{
				return this._resignAt;
			}
			set
			{
				if ((this._resignAt != value))
				{
					this.OnresignAtChanging(value);
					this.SendPropertyChanging();
					this._resignAt = value;
					this.SendPropertyChanged("resignAt");
					this.OnresignAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resignChecker", DbType="VarChar(50)")]
		public string resignChecker
		{
			get
			{
				return this._resignChecker;
			}
			set
			{
				if ((this._resignChecker != value))
				{
					this.OnresignCheckerChanging(value);
					this.SendPropertyChanging();
					this._resignChecker = value;
					this.SendPropertyChanged("resignChecker");
					this.OnresignCheckerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResignType_ResignRecord", Storage="_ResignType", ThisKey="resignTypeId", OtherKey="id", IsForeignKey=true)]
		public ResignType ResignType
		{
			get
			{
				return this._ResignType.Entity;
			}
			set
			{
				ResignType previousValue = this._ResignType.Entity;
				if (((previousValue != value) 
							|| (this._ResignType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResignType.Entity = null;
						previousValue.ResignRecord.Remove(this);
					}
					this._ResignType.Entity = value;
					if ((value != null))
					{
						value.ResignRecord.Add(this);
						this._resignTypeId = value.id;
					}
					else
					{
						this._resignTypeId = default(int);
					}
					this.SendPropertyChanged("ResignType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_ResignRecord", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.ResignRecord.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.ResignRecord.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResignType")]
	public partial class ResignType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<ResignRecord> _ResignRecord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public ResignType()
		{
			this._ResignRecord = new EntitySet<ResignRecord>(new Action<ResignRecord>(this.attach_ResignRecord), new Action<ResignRecord>(this.detach_ResignRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResignType_ResignRecord", Storage="_ResignRecord", ThisKey="id", OtherKey="resignTypeId")]
		public EntitySet<ResignRecord> ResignRecord
		{
			get
			{
				return this._ResignRecord;
			}
			set
			{
				this._ResignRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResignRecord(ResignRecord entity)
		{
			this.SendPropertyChanging();
			entity.ResignType = this;
		}
		
		private void detach_ResignRecord(ResignRecord entity)
		{
			this.SendPropertyChanging();
			entity.ResignType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private System.TimeSpan _startAt;
		
		private System.TimeSpan _endAt;
		
		private int _shiftType;
		
		private string _remark;
		
		private EntitySet<ShiftSchedule> _ShiftSchedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstartAtChanging(System.TimeSpan value);
    partial void OnstartAtChanged();
    partial void OnendAtChanging(System.TimeSpan value);
    partial void OnendAtChanged();
    partial void OnshiftTypeChanging(int value);
    partial void OnshiftTypeChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public Shift()
		{
			this._ShiftSchedule = new EntitySet<ShiftSchedule>(new Action<ShiftSchedule>(this.attach_ShiftSchedule), new Action<ShiftSchedule>(this.detach_ShiftSchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startAt", DbType="Time NOT NULL")]
		public System.TimeSpan startAt
		{
			get
			{
				return this._startAt;
			}
			set
			{
				if ((this._startAt != value))
				{
					this.OnstartAtChanging(value);
					this.SendPropertyChanging();
					this._startAt = value;
					this.SendPropertyChanged("startAt");
					this.OnstartAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endAt", DbType="Time NOT NULL")]
		public System.TimeSpan endAt
		{
			get
			{
				return this._endAt;
			}
			set
			{
				if ((this._endAt != value))
				{
					this.OnendAtChanging(value);
					this.SendPropertyChanging();
					this._endAt = value;
					this.SendPropertyChanged("endAt");
					this.OnendAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shiftType", DbType="Int NOT NULL")]
		public int shiftType
		{
			get
			{
				return this._shiftType;
			}
			set
			{
				if ((this._shiftType != value))
				{
					this.OnshiftTypeChanging(value);
					this.SendPropertyChanging();
					this._shiftType = value;
					this.SendPropertyChanged("shiftType");
					this.OnshiftTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_ShiftSchedule", Storage="_ShiftSchedule", ThisKey="id", OtherKey="shiftId")]
		public EntitySet<ShiftSchedule> ShiftSchedule
		{
			get
			{
				return this._ShiftSchedule;
			}
			set
			{
				this._ShiftSchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShiftSchedule(ShiftSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Shift = this;
		}
		
		private void detach_ShiftSchedule(ShiftSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Shift = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShiftSchedule")]
	public partial class ShiftSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _shiftId;
		
		private string _staffNr;
		
		private System.DateTime _scheduleAt;
		
		private EntityRef<Shift> _Shift;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshiftIdChanging(int value);
    partial void OnshiftIdChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OnscheduleAtChanging(System.DateTime value);
    partial void OnscheduleAtChanged();
    #endregion
		
		public ShiftSchedule()
		{
			this._Shift = default(EntityRef<Shift>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shiftId", DbType="Int NOT NULL")]
		public int shiftId
		{
			get
			{
				return this._shiftId;
			}
			set
			{
				if ((this._shiftId != value))
				{
					if (this._Shift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshiftIdChanging(value);
					this.SendPropertyChanging();
					this._shiftId = value;
					this.SendPropertyChanged("shiftId");
					this.OnshiftIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scheduleAt", DbType="Date NOT NULL")]
		public System.DateTime scheduleAt
		{
			get
			{
				return this._scheduleAt;
			}
			set
			{
				if ((this._scheduleAt != value))
				{
					this.OnscheduleAtChanging(value);
					this.SendPropertyChanging();
					this._scheduleAt = value;
					this.SendPropertyChanged("scheduleAt");
					this.OnscheduleAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shift_ShiftSchedule", Storage="_Shift", ThisKey="shiftId", OtherKey="id", IsForeignKey=true)]
		public Shift Shift
		{
			get
			{
				return this._Shift.Entity;
			}
			set
			{
				Shift previousValue = this._Shift.Entity;
				if (((previousValue != value) 
							|| (this._Shift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shift.Entity = null;
						previousValue.ShiftSchedule.Remove(this);
					}
					this._Shift.Entity = value;
					if ((value != null))
					{
						value.ShiftSchedule.Add(this);
						this._shiftId = value.id;
					}
					else
					{
						this._shiftId = default(int);
					}
					this.SendPropertyChanged("Shift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_ShiftSchedule", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.ShiftSchedule.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.ShiftSchedule.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nr;
		
		private string _name;
		
		private string _sex;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _ethnic;
		
		private System.Nullable<System.DateTime> _firstCompanyEmployAt;
		
		private System.Nullable<double> _totalCompanySeniority;
		
		private System.Nullable<System.DateTime> _companyEmployAt;
		
		private System.Nullable<double> _companySeniority;
		
		private int _workStatus;
		
		private bool _isOnTrial;
		
		private System.Nullable<System.DateTime> _trialOverAt;
		
		private System.Nullable<int> _companyId;
		
		private System.Nullable<int> _departmentId;
		
		private System.Nullable<int> _jobTitleId;
		
		private string _photo;
		
		private System.Nullable<int> _staffTypeId;
		
		private System.Nullable<int> _degreeTypeId;
		
		private string _speciality;
		
		private string _residenceAddress;
		
		private string _address;
		
		private string _id;
		
		private bool _isIdChecked;
		
		private string _phone;
		
		private string _contactName;
		
		private string _contactPhone;
		
		private string _contactFamilyMemberType;
		
		private string _domicile;
		
		private System.Nullable<int> _residenceType;
		
		private System.Nullable<int> _insureTypeId;
		
		private bool _isPayCPF;
		
		private System.Nullable<System.DateTime> _contractExpireAt;
		
		private System.Nullable<int> _contractCount;
		
		private System.Nullable<double> _totalSeniority;
		
		private string _remark;
		
		private System.Nullable<System.DateTime> _workingYearsAt;
		
		private EntitySet<AttendanceRecordCal> _AttendanceRecordCal;
		
		private EntitySet<AttendanceRecordDetail> _AttendanceRecordDetail;
		
		private EntitySet<BankCard> _BankCard;
		
		private EntitySet<Certificate> _Certificate;
		
		private EntitySet<FamilyMemeber> _FamilyMemeber;
		
		private EntitySet<FullMemberRecord> _FullMemberRecord;
		
		private EntitySet<ResignRecord> _ResignRecord;
		
		private EntitySet<ShiftSchedule> _ShiftSchedule;
		
		private EntitySet<AbsenceRecrod> _AbsenceRecrod;
		
		private EntitySet<ExtraWorkRecord> _ExtraWorkRecord;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<DegreeType> _DegreeType;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<InsureType> _InsureType;
		
		private EntityRef<JobTitle> _JobTitle;
		
		private EntityRef<StaffType> _StaffType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnrChanging(string value);
    partial void OnnrChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnethnicChanging(string value);
    partial void OnethnicChanged();
    partial void OnfirstCompanyEmployAtChanging(System.Nullable<System.DateTime> value);
    partial void OnfirstCompanyEmployAtChanged();
    partial void OntotalCompanySeniorityChanging(System.Nullable<double> value);
    partial void OntotalCompanySeniorityChanged();
    partial void OncompanyEmployAtChanging(System.Nullable<System.DateTime> value);
    partial void OncompanyEmployAtChanged();
    partial void OncompanySeniorityChanging(System.Nullable<double> value);
    partial void OncompanySeniorityChanged();
    partial void OnworkStatusChanging(int value);
    partial void OnworkStatusChanged();
    partial void OnisOnTrialChanging(bool value);
    partial void OnisOnTrialChanged();
    partial void OntrialOverAtChanging(System.Nullable<System.DateTime> value);
    partial void OntrialOverAtChanged();
    partial void OncompanyIdChanging(System.Nullable<int> value);
    partial void OncompanyIdChanged();
    partial void OndepartmentIdChanging(System.Nullable<int> value);
    partial void OndepartmentIdChanged();
    partial void OnjobTitleIdChanging(System.Nullable<int> value);
    partial void OnjobTitleIdChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnstaffTypeIdChanging(System.Nullable<int> value);
    partial void OnstaffTypeIdChanged();
    partial void OndegreeTypeIdChanging(System.Nullable<int> value);
    partial void OndegreeTypeIdChanged();
    partial void OnspecialityChanging(string value);
    partial void OnspecialityChanged();
    partial void OnresidenceAddressChanging(string value);
    partial void OnresidenceAddressChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnisIdCheckedChanging(bool value);
    partial void OnisIdCheckedChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncontactNameChanging(string value);
    partial void OncontactNameChanged();
    partial void OncontactPhoneChanging(string value);
    partial void OncontactPhoneChanged();
    partial void OncontactFamilyMemberTypeChanging(string value);
    partial void OncontactFamilyMemberTypeChanged();
    partial void OndomicileChanging(string value);
    partial void OndomicileChanged();
    partial void OnresidenceTypeChanging(System.Nullable<int> value);
    partial void OnresidenceTypeChanged();
    partial void OninsureTypeIdChanging(System.Nullable<int> value);
    partial void OninsureTypeIdChanged();
    partial void OnisPayCPFChanging(bool value);
    partial void OnisPayCPFChanged();
    partial void OncontractExpireAtChanging(System.Nullable<System.DateTime> value);
    partial void OncontractExpireAtChanged();
    partial void OncontractCountChanging(System.Nullable<int> value);
    partial void OncontractCountChanged();
    partial void OntotalSeniorityChanging(System.Nullable<double> value);
    partial void OntotalSeniorityChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnworkingYearsAtChanging(System.Nullable<System.DateTime> value);
    partial void OnworkingYearsAtChanged();
    #endregion
		
		public Staff()
		{
			this._AttendanceRecordCal = new EntitySet<AttendanceRecordCal>(new Action<AttendanceRecordCal>(this.attach_AttendanceRecordCal), new Action<AttendanceRecordCal>(this.detach_AttendanceRecordCal));
			this._AttendanceRecordDetail = new EntitySet<AttendanceRecordDetail>(new Action<AttendanceRecordDetail>(this.attach_AttendanceRecordDetail), new Action<AttendanceRecordDetail>(this.detach_AttendanceRecordDetail));
			this._BankCard = new EntitySet<BankCard>(new Action<BankCard>(this.attach_BankCard), new Action<BankCard>(this.detach_BankCard));
			this._Certificate = new EntitySet<Certificate>(new Action<Certificate>(this.attach_Certificate), new Action<Certificate>(this.detach_Certificate));
			this._FamilyMemeber = new EntitySet<FamilyMemeber>(new Action<FamilyMemeber>(this.attach_FamilyMemeber), new Action<FamilyMemeber>(this.detach_FamilyMemeber));
			this._FullMemberRecord = new EntitySet<FullMemberRecord>(new Action<FullMemberRecord>(this.attach_FullMemberRecord), new Action<FullMemberRecord>(this.detach_FullMemberRecord));
			this._ResignRecord = new EntitySet<ResignRecord>(new Action<ResignRecord>(this.attach_ResignRecord), new Action<ResignRecord>(this.detach_ResignRecord));
			this._ShiftSchedule = new EntitySet<ShiftSchedule>(new Action<ShiftSchedule>(this.attach_ShiftSchedule), new Action<ShiftSchedule>(this.detach_ShiftSchedule));
			this._AbsenceRecrod = new EntitySet<AbsenceRecrod>(new Action<AbsenceRecrod>(this.attach_AbsenceRecrod), new Action<AbsenceRecrod>(this.detach_AbsenceRecrod));
			this._ExtraWorkRecord = new EntitySet<ExtraWorkRecord>(new Action<ExtraWorkRecord>(this.attach_ExtraWorkRecord), new Action<ExtraWorkRecord>(this.detach_ExtraWorkRecord));
			this._Company = default(EntityRef<Company>);
			this._DegreeType = default(EntityRef<DegreeType>);
			this._Department = default(EntityRef<Department>);
			this._InsureType = default(EntityRef<InsureType>);
			this._JobTitle = default(EntityRef<JobTitle>);
			this._StaffType = default(EntityRef<StaffType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nr
		{
			get
			{
				return this._nr;
			}
			set
			{
				if ((this._nr != value))
				{
					this.OnnrChanging(value);
					this.SendPropertyChanging();
					this._nr = value;
					this.SendPropertyChanged("nr");
					this.OnnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(10)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ethnic", DbType="VarChar(50)")]
		public string ethnic
		{
			get
			{
				return this._ethnic;
			}
			set
			{
				if ((this._ethnic != value))
				{
					this.OnethnicChanging(value);
					this.SendPropertyChanging();
					this._ethnic = value;
					this.SendPropertyChanged("ethnic");
					this.OnethnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstCompanyEmployAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> firstCompanyEmployAt
		{
			get
			{
				return this._firstCompanyEmployAt;
			}
			set
			{
				if ((this._firstCompanyEmployAt != value))
				{
					this.OnfirstCompanyEmployAtChanging(value);
					this.SendPropertyChanging();
					this._firstCompanyEmployAt = value;
					this.SendPropertyChanged("firstCompanyEmployAt");
					this.OnfirstCompanyEmployAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalCompanySeniority", DbType="Float")]
		public System.Nullable<double> totalCompanySeniority
		{
			get
			{
				return this._totalCompanySeniority;
			}
			set
			{
				if ((this._totalCompanySeniority != value))
				{
					this.OntotalCompanySeniorityChanging(value);
					this.SendPropertyChanging();
					this._totalCompanySeniority = value;
					this.SendPropertyChanged("totalCompanySeniority");
					this.OntotalCompanySeniorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyEmployAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> companyEmployAt
		{
			get
			{
				return this._companyEmployAt;
			}
			set
			{
				if ((this._companyEmployAt != value))
				{
					this.OncompanyEmployAtChanging(value);
					this.SendPropertyChanging();
					this._companyEmployAt = value;
					this.SendPropertyChanged("companyEmployAt");
					this.OncompanyEmployAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companySeniority", DbType="Float")]
		public System.Nullable<double> companySeniority
		{
			get
			{
				return this._companySeniority;
			}
			set
			{
				if ((this._companySeniority != value))
				{
					this.OncompanySeniorityChanging(value);
					this.SendPropertyChanging();
					this._companySeniority = value;
					this.SendPropertyChanged("companySeniority");
					this.OncompanySeniorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workStatus", DbType="Int NOT NULL")]
		public int workStatus
		{
			get
			{
				return this._workStatus;
			}
			set
			{
				if ((this._workStatus != value))
				{
					this.OnworkStatusChanging(value);
					this.SendPropertyChanging();
					this._workStatus = value;
					this.SendPropertyChanged("workStatus");
					this.OnworkStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOnTrial", DbType="Bit NOT NULL")]
		public bool isOnTrial
		{
			get
			{
				return this._isOnTrial;
			}
			set
			{
				if ((this._isOnTrial != value))
				{
					this.OnisOnTrialChanging(value);
					this.SendPropertyChanging();
					this._isOnTrial = value;
					this.SendPropertyChanged("isOnTrial");
					this.OnisOnTrialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trialOverAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> trialOverAt
		{
			get
			{
				return this._trialOverAt;
			}
			set
			{
				if ((this._trialOverAt != value))
				{
					this.OntrialOverAtChanging(value);
					this.SendPropertyChanging();
					this._trialOverAt = value;
					this.SendPropertyChanged("trialOverAt");
					this.OntrialOverAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="Int")]
		public System.Nullable<int> companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._departmentId = value;
					this.SendPropertyChanged("departmentId");
					this.OndepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitleId", DbType="Int")]
		public System.Nullable<int> jobTitleId
		{
			get
			{
				return this._jobTitleId;
			}
			set
			{
				if ((this._jobTitleId != value))
				{
					if (this._JobTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._jobTitleId = value;
					this.SendPropertyChanged("jobTitleId");
					this.OnjobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffTypeId", DbType="Int")]
		public System.Nullable<int> staffTypeId
		{
			get
			{
				return this._staffTypeId;
			}
			set
			{
				if ((this._staffTypeId != value))
				{
					if (this._StaffType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffTypeIdChanging(value);
					this.SendPropertyChanging();
					this._staffTypeId = value;
					this.SendPropertyChanged("staffTypeId");
					this.OnstaffTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degreeTypeId", DbType="Int")]
		public System.Nullable<int> degreeTypeId
		{
			get
			{
				return this._degreeTypeId;
			}
			set
			{
				if ((this._degreeTypeId != value))
				{
					if (this._DegreeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndegreeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._degreeTypeId = value;
					this.SendPropertyChanged("degreeTypeId");
					this.OndegreeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciality", DbType="VarChar(200)")]
		public string speciality
		{
			get
			{
				return this._speciality;
			}
			set
			{
				if ((this._speciality != value))
				{
					this.OnspecialityChanging(value);
					this.SendPropertyChanging();
					this._speciality = value;
					this.SendPropertyChanged("speciality");
					this.OnspecialityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenceAddress", DbType="VarChar(200)")]
		public string residenceAddress
		{
			get
			{
				return this._residenceAddress;
			}
			set
			{
				if ((this._residenceAddress != value))
				{
					this.OnresidenceAddressChanging(value);
					this.SendPropertyChanging();
					this._residenceAddress = value;
					this.SendPropertyChanged("residenceAddress");
					this.OnresidenceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isIdChecked", DbType="Bit NOT NULL")]
		public bool isIdChecked
		{
			get
			{
				return this._isIdChecked;
			}
			set
			{
				if ((this._isIdChecked != value))
				{
					this.OnisIdCheckedChanging(value);
					this.SendPropertyChanging();
					this._isIdChecked = value;
					this.SendPropertyChanged("isIdChecked");
					this.OnisIdCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactName", DbType="VarChar(50)")]
		public string contactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this.OncontactNameChanging(value);
					this.SendPropertyChanging();
					this._contactName = value;
					this.SendPropertyChanged("contactName");
					this.OncontactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhone", DbType="VarChar(50)")]
		public string contactPhone
		{
			get
			{
				return this._contactPhone;
			}
			set
			{
				if ((this._contactPhone != value))
				{
					this.OncontactPhoneChanging(value);
					this.SendPropertyChanging();
					this._contactPhone = value;
					this.SendPropertyChanged("contactPhone");
					this.OncontactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactFamilyMemberType", DbType="VarChar(50)")]
		public string contactFamilyMemberType
		{
			get
			{
				return this._contactFamilyMemberType;
			}
			set
			{
				if ((this._contactFamilyMemberType != value))
				{
					this.OncontactFamilyMemberTypeChanging(value);
					this.SendPropertyChanging();
					this._contactFamilyMemberType = value;
					this.SendPropertyChanged("contactFamilyMemberType");
					this.OncontactFamilyMemberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domicile", DbType="VarChar(50)")]
		public string domicile
		{
			get
			{
				return this._domicile;
			}
			set
			{
				if ((this._domicile != value))
				{
					this.OndomicileChanging(value);
					this.SendPropertyChanging();
					this._domicile = value;
					this.SendPropertyChanged("domicile");
					this.OndomicileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenceType", DbType="Int")]
		public System.Nullable<int> residenceType
		{
			get
			{
				return this._residenceType;
			}
			set
			{
				if ((this._residenceType != value))
				{
					this.OnresidenceTypeChanging(value);
					this.SendPropertyChanging();
					this._residenceType = value;
					this.SendPropertyChanged("residenceType");
					this.OnresidenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insureTypeId", DbType="Int")]
		public System.Nullable<int> insureTypeId
		{
			get
			{
				return this._insureTypeId;
			}
			set
			{
				if ((this._insureTypeId != value))
				{
					if (this._InsureType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninsureTypeIdChanging(value);
					this.SendPropertyChanging();
					this._insureTypeId = value;
					this.SendPropertyChanged("insureTypeId");
					this.OninsureTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPayCPF", DbType="Bit NOT NULL")]
		public bool isPayCPF
		{
			get
			{
				return this._isPayCPF;
			}
			set
			{
				if ((this._isPayCPF != value))
				{
					this.OnisPayCPFChanging(value);
					this.SendPropertyChanging();
					this._isPayCPF = value;
					this.SendPropertyChanged("isPayCPF");
					this.OnisPayCPFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractExpireAt", DbType="Date")]
		public System.Nullable<System.DateTime> contractExpireAt
		{
			get
			{
				return this._contractExpireAt;
			}
			set
			{
				if ((this._contractExpireAt != value))
				{
					this.OncontractExpireAtChanging(value);
					this.SendPropertyChanging();
					this._contractExpireAt = value;
					this.SendPropertyChanged("contractExpireAt");
					this.OncontractExpireAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractCount", DbType="Int")]
		public System.Nullable<int> contractCount
		{
			get
			{
				return this._contractCount;
			}
			set
			{
				if ((this._contractCount != value))
				{
					this.OncontractCountChanging(value);
					this.SendPropertyChanging();
					this._contractCount = value;
					this.SendPropertyChanged("contractCount");
					this.OncontractCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalSeniority", DbType="Float")]
		public System.Nullable<double> totalSeniority
		{
			get
			{
				return this._totalSeniority;
			}
			set
			{
				if ((this._totalSeniority != value))
				{
					this.OntotalSeniorityChanging(value);
					this.SendPropertyChanging();
					this._totalSeniority = value;
					this.SendPropertyChanged("totalSeniority");
					this.OntotalSeniorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workingYearsAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> workingYearsAt
		{
			get
			{
				return this._workingYearsAt;
			}
			set
			{
				if ((this._workingYearsAt != value))
				{
					this.OnworkingYearsAtChanging(value);
					this.SendPropertyChanging();
					this._workingYearsAt = value;
					this.SendPropertyChanged("workingYearsAt");
					this.OnworkingYearsAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_AttendanceRecordCal", Storage="_AttendanceRecordCal", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<AttendanceRecordCal> AttendanceRecordCal
		{
			get
			{
				return this._AttendanceRecordCal;
			}
			set
			{
				this._AttendanceRecordCal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_AttendanceRecordDetail", Storage="_AttendanceRecordDetail", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<AttendanceRecordDetail> AttendanceRecordDetail
		{
			get
			{
				return this._AttendanceRecordDetail;
			}
			set
			{
				this._AttendanceRecordDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_BankCard", Storage="_BankCard", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<BankCard> BankCard
		{
			get
			{
				return this._BankCard;
			}
			set
			{
				this._BankCard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Certificate", Storage="_Certificate", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<Certificate> Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				this._Certificate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FamilyMemeber", Storage="_FamilyMemeber", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<FamilyMemeber> FamilyMemeber
		{
			get
			{
				return this._FamilyMemeber;
			}
			set
			{
				this._FamilyMemeber.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_FullMemberRecord", Storage="_FullMemberRecord", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<FullMemberRecord> FullMemberRecord
		{
			get
			{
				return this._FullMemberRecord;
			}
			set
			{
				this._FullMemberRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_ResignRecord", Storage="_ResignRecord", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<ResignRecord> ResignRecord
		{
			get
			{
				return this._ResignRecord;
			}
			set
			{
				this._ResignRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_ShiftSchedule", Storage="_ShiftSchedule", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<ShiftSchedule> ShiftSchedule
		{
			get
			{
				return this._ShiftSchedule;
			}
			set
			{
				this._ShiftSchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_AbsenceRecrod", Storage="_AbsenceRecrod", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<AbsenceRecrod> AbsenceRecrod
		{
			get
			{
				return this._AbsenceRecrod;
			}
			set
			{
				this._AbsenceRecrod.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_ExtraWorkRecord", Storage="_ExtraWorkRecord", ThisKey="nr", OtherKey="staffNr")]
		public EntitySet<ExtraWorkRecord> ExtraWorkRecord
		{
			get
			{
				return this._ExtraWorkRecord;
			}
			set
			{
				this._ExtraWorkRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Staff", Storage="_Company", ThisKey="companyId", OtherKey="id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._companyId = value.id;
					}
					else
					{
						this._companyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DegreeType_Staff", Storage="_DegreeType", ThisKey="degreeTypeId", OtherKey="id", IsForeignKey=true)]
		public DegreeType DegreeType
		{
			get
			{
				return this._DegreeType.Entity;
			}
			set
			{
				DegreeType previousValue = this._DegreeType.Entity;
				if (((previousValue != value) 
							|| (this._DegreeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DegreeType.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._DegreeType.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._degreeTypeId = value.id;
					}
					else
					{
						this._degreeTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DegreeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Staff", Storage="_Department", ThisKey="departmentId", OtherKey="id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._departmentId = value.id;
					}
					else
					{
						this._departmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InsureType_Staff", Storage="_InsureType", ThisKey="insureTypeId", OtherKey="id", IsForeignKey=true)]
		public InsureType InsureType
		{
			get
			{
				return this._InsureType.Entity;
			}
			set
			{
				InsureType previousValue = this._InsureType.Entity;
				if (((previousValue != value) 
							|| (this._InsureType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InsureType.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._InsureType.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._insureTypeId = value.id;
					}
					else
					{
						this._insureTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InsureType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobTitle_Staff", Storage="_JobTitle", ThisKey="jobTitleId", OtherKey="id", IsForeignKey=true)]
		public JobTitle JobTitle
		{
			get
			{
				return this._JobTitle.Entity;
			}
			set
			{
				JobTitle previousValue = this._JobTitle.Entity;
				if (((previousValue != value) 
							|| (this._JobTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobTitle.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._JobTitle.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._jobTitleId = value.id;
					}
					else
					{
						this._jobTitleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("JobTitle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffType_Staff", Storage="_StaffType", ThisKey="staffTypeId", OtherKey="id", IsForeignKey=true)]
		public StaffType StaffType
		{
			get
			{
				return this._StaffType.Entity;
			}
			set
			{
				StaffType previousValue = this._StaffType.Entity;
				if (((previousValue != value) 
							|| (this._StaffType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffType.Entity = null;
						previousValue.Staff.Remove(this);
					}
					this._StaffType.Entity = value;
					if ((value != null))
					{
						value.Staff.Add(this);
						this._staffTypeId = value.id;
					}
					else
					{
						this._staffTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttendanceRecordCal(AttendanceRecordCal entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_AttendanceRecordCal(AttendanceRecordCal entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_AttendanceRecordDetail(AttendanceRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_AttendanceRecordDetail(AttendanceRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_BankCard(BankCard entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_BankCard(BankCard entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_Certificate(Certificate entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Certificate(Certificate entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_FamilyMemeber(FamilyMemeber entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_FamilyMemeber(FamilyMemeber entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_FullMemberRecord(FullMemberRecord entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_FullMemberRecord(FullMemberRecord entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_ResignRecord(ResignRecord entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_ResignRecord(ResignRecord entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_ShiftSchedule(ShiftSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_ShiftSchedule(ShiftSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_AbsenceRecrod(AbsenceRecrod entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_AbsenceRecrod(AbsenceRecrod entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
		
		private void attach_ExtraWorkRecord(ExtraWorkRecord entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_ExtraWorkRecord(ExtraWorkRecord entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffType")]
	public partial class StaffType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public StaffType()
		{
			this._Staff = new EntitySet<Staff>(new Action<Staff>(this.attach_Staff), new Action<Staff>(this.detach_Staff));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffType_Staff", Storage="_Staff", ThisKey="id", OtherKey="staffTypeId")]
		public EntitySet<Staff> Staff
		{
			get
			{
				return this._Staff;
			}
			set
			{
				this._Staff.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.StaffType = this;
		}
		
		private void detach_Staff(Staff entity)
		{
			this.SendPropertyChanging();
			entity.StaffType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemSetting")]
	public partial class SystemSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _daysBeforeAlertStaffGoFull;
		
		private string _goFullAlertMails;
		
		private string _unCertifacteAlertMails;
		
		private string _attendanceExceptionAlertMails;
		
		private System.Nullable<double> _repeatAttendanceRecordTime;
		
		private System.Nullable<double> _validAttendanceRecordTime;
		
		private System.Nullable<double> _lateExceptionTime;
		
		private System.Nullable<double> _earlyLeaveExceptionTime;
		
		private string _systemHost;
		
		private string _emaiSMTPHost;
		
		private string _emailUser;
		
		private string _emailPwd;
		
		private string _emailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndaysBeforeAlertStaffGoFullChanging(System.Nullable<double> value);
    partial void OndaysBeforeAlertStaffGoFullChanged();
    partial void OngoFullAlertMailsChanging(string value);
    partial void OngoFullAlertMailsChanged();
    partial void OnunCertifacteAlertMailsChanging(string value);
    partial void OnunCertifacteAlertMailsChanged();
    partial void OnattendanceExceptionAlertMailsChanging(string value);
    partial void OnattendanceExceptionAlertMailsChanged();
    partial void OnrepeatAttendanceRecordTimeChanging(System.Nullable<double> value);
    partial void OnrepeatAttendanceRecordTimeChanged();
    partial void OnvalidAttendanceRecordTimeChanging(System.Nullable<double> value);
    partial void OnvalidAttendanceRecordTimeChanged();
    partial void OnlateExceptionTimeChanging(System.Nullable<double> value);
    partial void OnlateExceptionTimeChanged();
    partial void OnearlyLeaveExceptionTimeChanging(System.Nullable<double> value);
    partial void OnearlyLeaveExceptionTimeChanged();
    partial void OnsystemHostChanging(string value);
    partial void OnsystemHostChanged();
    partial void OnemaiSMTPHostChanging(string value);
    partial void OnemaiSMTPHostChanged();
    partial void OnemailUserChanging(string value);
    partial void OnemailUserChanged();
    partial void OnemailPwdChanging(string value);
    partial void OnemailPwdChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    #endregion
		
		public SystemSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daysBeforeAlertStaffGoFull", DbType="Float")]
		public System.Nullable<double> daysBeforeAlertStaffGoFull
		{
			get
			{
				return this._daysBeforeAlertStaffGoFull;
			}
			set
			{
				if ((this._daysBeforeAlertStaffGoFull != value))
				{
					this.OndaysBeforeAlertStaffGoFullChanging(value);
					this.SendPropertyChanging();
					this._daysBeforeAlertStaffGoFull = value;
					this.SendPropertyChanged("daysBeforeAlertStaffGoFull");
					this.OndaysBeforeAlertStaffGoFullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goFullAlertMails", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string goFullAlertMails
		{
			get
			{
				return this._goFullAlertMails;
			}
			set
			{
				if ((this._goFullAlertMails != value))
				{
					this.OngoFullAlertMailsChanging(value);
					this.SendPropertyChanging();
					this._goFullAlertMails = value;
					this.SendPropertyChanged("goFullAlertMails");
					this.OngoFullAlertMailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unCertifacteAlertMails", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string unCertifacteAlertMails
		{
			get
			{
				return this._unCertifacteAlertMails;
			}
			set
			{
				if ((this._unCertifacteAlertMails != value))
				{
					this.OnunCertifacteAlertMailsChanging(value);
					this.SendPropertyChanging();
					this._unCertifacteAlertMails = value;
					this.SendPropertyChanged("unCertifacteAlertMails");
					this.OnunCertifacteAlertMailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendanceExceptionAlertMails", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string attendanceExceptionAlertMails
		{
			get
			{
				return this._attendanceExceptionAlertMails;
			}
			set
			{
				if ((this._attendanceExceptionAlertMails != value))
				{
					this.OnattendanceExceptionAlertMailsChanging(value);
					this.SendPropertyChanging();
					this._attendanceExceptionAlertMails = value;
					this.SendPropertyChanged("attendanceExceptionAlertMails");
					this.OnattendanceExceptionAlertMailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repeatAttendanceRecordTime", DbType="Float")]
		public System.Nullable<double> repeatAttendanceRecordTime
		{
			get
			{
				return this._repeatAttendanceRecordTime;
			}
			set
			{
				if ((this._repeatAttendanceRecordTime != value))
				{
					this.OnrepeatAttendanceRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._repeatAttendanceRecordTime = value;
					this.SendPropertyChanged("repeatAttendanceRecordTime");
					this.OnrepeatAttendanceRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validAttendanceRecordTime", DbType="Float")]
		public System.Nullable<double> validAttendanceRecordTime
		{
			get
			{
				return this._validAttendanceRecordTime;
			}
			set
			{
				if ((this._validAttendanceRecordTime != value))
				{
					this.OnvalidAttendanceRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._validAttendanceRecordTime = value;
					this.SendPropertyChanged("validAttendanceRecordTime");
					this.OnvalidAttendanceRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lateExceptionTime", DbType="Float")]
		public System.Nullable<double> lateExceptionTime
		{
			get
			{
				return this._lateExceptionTime;
			}
			set
			{
				if ((this._lateExceptionTime != value))
				{
					this.OnlateExceptionTimeChanging(value);
					this.SendPropertyChanging();
					this._lateExceptionTime = value;
					this.SendPropertyChanged("lateExceptionTime");
					this.OnlateExceptionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_earlyLeaveExceptionTime", DbType="Float")]
		public System.Nullable<double> earlyLeaveExceptionTime
		{
			get
			{
				return this._earlyLeaveExceptionTime;
			}
			set
			{
				if ((this._earlyLeaveExceptionTime != value))
				{
					this.OnearlyLeaveExceptionTimeChanging(value);
					this.SendPropertyChanging();
					this._earlyLeaveExceptionTime = value;
					this.SendPropertyChanged("earlyLeaveExceptionTime");
					this.OnearlyLeaveExceptionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemHost", DbType="VarChar(50)")]
		public string systemHost
		{
			get
			{
				return this._systemHost;
			}
			set
			{
				if ((this._systemHost != value))
				{
					this.OnsystemHostChanging(value);
					this.SendPropertyChanging();
					this._systemHost = value;
					this.SendPropertyChanged("systemHost");
					this.OnsystemHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emaiSMTPHost", DbType="VarChar(50)")]
		public string emaiSMTPHost
		{
			get
			{
				return this._emaiSMTPHost;
			}
			set
			{
				if ((this._emaiSMTPHost != value))
				{
					this.OnemaiSMTPHostChanging(value);
					this.SendPropertyChanging();
					this._emaiSMTPHost = value;
					this.SendPropertyChanged("emaiSMTPHost");
					this.OnemaiSMTPHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailUser", DbType="VarChar(50)")]
		public string emailUser
		{
			get
			{
				return this._emailUser;
			}
			set
			{
				if ((this._emailUser != value))
				{
					this.OnemailUserChanging(value);
					this.SendPropertyChanging();
					this._emailUser = value;
					this.SendPropertyChanged("emailUser");
					this.OnemailUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailPwd", DbType="VarChar(50)")]
		public string emailPwd
		{
			get
			{
				return this._emailPwd;
			}
			set
			{
				if ((this._emailPwd != value))
				{
					this.OnemailPwdChanging(value);
					this.SendPropertyChanging();
					this._emailPwd = value;
					this.SendPropertyChanged("emailPwd");
					this.OnemailPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddress", DbType="VarChar(50)")]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskRound")]
	public partial class TaskRound : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _taskStatus;
		
		private System.DateTime _createdAt;
		
		private int _taskType;
		
		private System.Nullable<System.DateTime> _finishAt;
		
		private string _result;
		
		private System.Guid _uuid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntaskStatusChanging(int value);
    partial void OntaskStatusChanged();
    partial void OncreatedAtChanging(System.DateTime value);
    partial void OncreatedAtChanged();
    partial void OntaskTypeChanging(int value);
    partial void OntaskTypeChanged();
    partial void OnfinishAtChanging(System.Nullable<System.DateTime> value);
    partial void OnfinishAtChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnuuidChanging(System.Guid value);
    partial void OnuuidChanged();
    #endregion
		
		public TaskRound()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskStatus", DbType="Int NOT NULL")]
		public int taskStatus
		{
			get
			{
				return this._taskStatus;
			}
			set
			{
				if ((this._taskStatus != value))
				{
					this.OntaskStatusChanging(value);
					this.SendPropertyChanging();
					this._taskStatus = value;
					this.SendPropertyChanged("taskStatus");
					this.OntaskStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime NOT NULL")]
		public System.DateTime createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskType", DbType="Int NOT NULL")]
		public int taskType
		{
			get
			{
				return this._taskType;
			}
			set
			{
				if ((this._taskType != value))
				{
					this.OntaskTypeChanging(value);
					this.SendPropertyChanging();
					this._taskType = value;
					this.SendPropertyChanged("taskType");
					this.OntaskTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finishAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> finishAt
		{
			get
			{
				return this._finishAt;
			}
			set
			{
				if ((this._finishAt != value))
				{
					this.OnfinishAtChanging(value);
					this.SendPropertyChanging();
					this._finishAt = value;
					this.SendPropertyChanged("finishAt");
					this.OnfinishAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid uuid
		{
			get
			{
				return this._uuid;
			}
			set
			{
				if ((this._uuid != value))
				{
					this.OnuuidChanging(value);
					this.SendPropertyChanging();
					this._uuid = value;
					this.SendPropertyChanged("uuid");
					this.OnuuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceRecordCalExceptionView")]
	public partial class AttendanceRecordCalExceptionView
	{
		
		private System.DateTime _attendanceDate;
		
		private System.Nullable<bool> _isExceptionHandled;
		
		private System.Nullable<int> _isExceptionHandledCount;
		
		public AttendanceRecordCalExceptionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendanceDate", DbType="DateTime NOT NULL")]
		public System.DateTime attendanceDate
		{
			get
			{
				return this._attendanceDate;
			}
			set
			{
				if ((this._attendanceDate != value))
				{
					this._attendanceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExceptionHandled", DbType="Bit")]
		public System.Nullable<bool> isExceptionHandled
		{
			get
			{
				return this._isExceptionHandled;
			}
			set
			{
				if ((this._isExceptionHandled != value))
				{
					this._isExceptionHandled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExceptionHandledCount", DbType="Int")]
		public System.Nullable<int> isExceptionHandledCount
		{
			get
			{
				return this._isExceptionHandledCount;
			}
			set
			{
				if ((this._isExceptionHandledCount != value))
				{
					this._isExceptionHandledCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShiftScheduleView")]
	public partial class ShiftScheduleView
	{
		
		private int _id;
		
		private string _staffNr;
		
		private System.DateTime _scheduleAt;
		
		private int _shiftId;
		
		private string _code;
		
		private string _name;
		
		private System.TimeSpan _startAt;
		
		private System.TimeSpan _endAt;
		
		private int _shiftType;
		
		private string _remark;
		
		private System.Nullable<System.DateTime> _fullStartAt;
		
		private System.Nullable<System.DateTime> _fullEndAt;
		
		public ShiftScheduleView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					this._staffNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scheduleAt", DbType="Date NOT NULL")]
		public System.DateTime scheduleAt
		{
			get
			{
				return this._scheduleAt;
			}
			set
			{
				if ((this._scheduleAt != value))
				{
					this._scheduleAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shiftId", DbType="Int NOT NULL")]
		public int shiftId
		{
			get
			{
				return this._shiftId;
			}
			set
			{
				if ((this._shiftId != value))
				{
					this._shiftId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this._code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startAt", DbType="Time NOT NULL")]
		public System.TimeSpan startAt
		{
			get
			{
				return this._startAt;
			}
			set
			{
				if ((this._startAt != value))
				{
					this._startAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endAt", DbType="Time NOT NULL")]
		public System.TimeSpan endAt
		{
			get
			{
				return this._endAt;
			}
			set
			{
				if ((this._endAt != value))
				{
					this._endAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shiftType", DbType="Int NOT NULL")]
		public int shiftType
		{
			get
			{
				return this._shiftType;
			}
			set
			{
				if ((this._shiftType != value))
				{
					this._shiftType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullStartAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> fullStartAt
		{
			get
			{
				return this._fullStartAt;
			}
			set
			{
				if ((this._fullStartAt != value))
				{
					this._fullStartAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullEndAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> fullEndAt
		{
			get
			{
				return this._fullEndAt;
			}
			set
			{
				if ((this._fullEndAt != value))
				{
					this._fullEndAt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceRecordCalView")]
	public partial class AttendanceRecordCalView
	{
		
		private int _id;
		
		private string _staffNr;
		
		private double _oriWorkingHour;
		
		private System.DateTime _attendanceDate;
		
		private double _actWorkingHour;
		
		private string _remark;
		
		private System.DateTime _createdAt;
		
		private bool _isManualCal;
		
		private bool _isException;
		
		private string _exceptionCodes;
		
		private string _name;
		
		private string _nr;
		
		private string _sex;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _ethnic;
		
		private System.Nullable<System.DateTime> _firstCompanyEmployAt;
		
		private System.Nullable<double> _totalCompanySeniority;
		
		private System.Nullable<System.DateTime> _companyEmployAt;
		
		private System.Nullable<double> _companySeniority;
		
		private int _workStatus;
		
		private bool _isOnTrial;
		
		private System.Nullable<System.DateTime> _trialOverAt;
		
		private System.Nullable<int> _companyId;
		
		private System.Nullable<int> _departmentId;
		
		private System.Nullable<int> _jobTitleId;
		
		private string _photo;
		
		private System.Nullable<int> _staffTypeId;
		
		private System.Nullable<int> _degreeTypeId;
		
		private string _speciality;
		
		private string _residenceAddress;
		
		private string _address;
		
		private string _staffid;
		
		private bool _isIdChecked;
		
		private string _phone;
		
		private string _contactName;
		
		private string _contactPhone;
		
		private string _contactFamilyMemberType;
		
		private string _domicile;
		
		private System.Nullable<int> _residenceType;
		
		private System.Nullable<int> _insureTypeId;
		
		private bool _isPayCPF;
		
		private System.Nullable<System.DateTime> _contractExpireAt;
		
		private System.Nullable<int> _contractCount;
		
		private System.Nullable<double> _totalSeniority;
		
		private string _departmentName;
		
		private string _staffRemark;
		
		private System.Nullable<bool> _isExceptionHandled;
		
		public AttendanceRecordCalView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					this._staffNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oriWorkingHour", DbType="Float NOT NULL")]
		public double oriWorkingHour
		{
			get
			{
				return this._oriWorkingHour;
			}
			set
			{
				if ((this._oriWorkingHour != value))
				{
					this._oriWorkingHour = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendanceDate", DbType="DateTime NOT NULL")]
		public System.DateTime attendanceDate
		{
			get
			{
				return this._attendanceDate;
			}
			set
			{
				if ((this._attendanceDate != value))
				{
					this._attendanceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actWorkingHour", DbType="Float NOT NULL")]
		public double actWorkingHour
		{
			get
			{
				return this._actWorkingHour;
			}
			set
			{
				if ((this._actWorkingHour != value))
				{
					this._actWorkingHour = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this._remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime NOT NULL")]
		public System.DateTime createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this._createdAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isManualCal", DbType="Bit NOT NULL")]
		public bool isManualCal
		{
			get
			{
				return this._isManualCal;
			}
			set
			{
				if ((this._isManualCal != value))
				{
					this._isManualCal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isException", DbType="Bit NOT NULL")]
		public bool isException
		{
			get
			{
				return this._isException;
			}
			set
			{
				if ((this._isException != value))
				{
					this._isException = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exceptionCodes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string exceptionCodes
		{
			get
			{
				return this._exceptionCodes;
			}
			set
			{
				if ((this._exceptionCodes != value))
				{
					this._exceptionCodes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string nr
		{
			get
			{
				return this._nr;
			}
			set
			{
				if ((this._nr != value))
				{
					this._nr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(10)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this._sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this._birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ethnic", DbType="VarChar(50)")]
		public string ethnic
		{
			get
			{
				return this._ethnic;
			}
			set
			{
				if ((this._ethnic != value))
				{
					this._ethnic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstCompanyEmployAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> firstCompanyEmployAt
		{
			get
			{
				return this._firstCompanyEmployAt;
			}
			set
			{
				if ((this._firstCompanyEmployAt != value))
				{
					this._firstCompanyEmployAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalCompanySeniority", DbType="Float")]
		public System.Nullable<double> totalCompanySeniority
		{
			get
			{
				return this._totalCompanySeniority;
			}
			set
			{
				if ((this._totalCompanySeniority != value))
				{
					this._totalCompanySeniority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyEmployAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> companyEmployAt
		{
			get
			{
				return this._companyEmployAt;
			}
			set
			{
				if ((this._companyEmployAt != value))
				{
					this._companyEmployAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companySeniority", DbType="Float")]
		public System.Nullable<double> companySeniority
		{
			get
			{
				return this._companySeniority;
			}
			set
			{
				if ((this._companySeniority != value))
				{
					this._companySeniority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workStatus", DbType="Int NOT NULL")]
		public int workStatus
		{
			get
			{
				return this._workStatus;
			}
			set
			{
				if ((this._workStatus != value))
				{
					this._workStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOnTrial", DbType="Bit NOT NULL")]
		public bool isOnTrial
		{
			get
			{
				return this._isOnTrial;
			}
			set
			{
				if ((this._isOnTrial != value))
				{
					this._isOnTrial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trialOverAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> trialOverAt
		{
			get
			{
				return this._trialOverAt;
			}
			set
			{
				if ((this._trialOverAt != value))
				{
					this._trialOverAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="Int")]
		public System.Nullable<int> companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this._departmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitleId", DbType="Int")]
		public System.Nullable<int> jobTitleId
		{
			get
			{
				return this._jobTitleId;
			}
			set
			{
				if ((this._jobTitleId != value))
				{
					this._jobTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="VarChar(50)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this._photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffTypeId", DbType="Int")]
		public System.Nullable<int> staffTypeId
		{
			get
			{
				return this._staffTypeId;
			}
			set
			{
				if ((this._staffTypeId != value))
				{
					this._staffTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degreeTypeId", DbType="Int")]
		public System.Nullable<int> degreeTypeId
		{
			get
			{
				return this._degreeTypeId;
			}
			set
			{
				if ((this._degreeTypeId != value))
				{
					this._degreeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciality", DbType="VarChar(200)")]
		public string speciality
		{
			get
			{
				return this._speciality;
			}
			set
			{
				if ((this._speciality != value))
				{
					this._speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenceAddress", DbType="VarChar(200)")]
		public string residenceAddress
		{
			get
			{
				return this._residenceAddress;
			}
			set
			{
				if ((this._residenceAddress != value))
				{
					this._residenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this._address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffid", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffid
		{
			get
			{
				return this._staffid;
			}
			set
			{
				if ((this._staffid != value))
				{
					this._staffid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isIdChecked", DbType="Bit NOT NULL")]
		public bool isIdChecked
		{
			get
			{
				return this._isIdChecked;
			}
			set
			{
				if ((this._isIdChecked != value))
				{
					this._isIdChecked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactName", DbType="VarChar(50)")]
		public string contactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhone", DbType="VarChar(50)")]
		public string contactPhone
		{
			get
			{
				return this._contactPhone;
			}
			set
			{
				if ((this._contactPhone != value))
				{
					this._contactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactFamilyMemberType", DbType="VarChar(50)")]
		public string contactFamilyMemberType
		{
			get
			{
				return this._contactFamilyMemberType;
			}
			set
			{
				if ((this._contactFamilyMemberType != value))
				{
					this._contactFamilyMemberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domicile", DbType="VarChar(50)")]
		public string domicile
		{
			get
			{
				return this._domicile;
			}
			set
			{
				if ((this._domicile != value))
				{
					this._domicile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenceType", DbType="Int")]
		public System.Nullable<int> residenceType
		{
			get
			{
				return this._residenceType;
			}
			set
			{
				if ((this._residenceType != value))
				{
					this._residenceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insureTypeId", DbType="Int")]
		public System.Nullable<int> insureTypeId
		{
			get
			{
				return this._insureTypeId;
			}
			set
			{
				if ((this._insureTypeId != value))
				{
					this._insureTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPayCPF", DbType="Bit NOT NULL")]
		public bool isPayCPF
		{
			get
			{
				return this._isPayCPF;
			}
			set
			{
				if ((this._isPayCPF != value))
				{
					this._isPayCPF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractExpireAt", DbType="Date")]
		public System.Nullable<System.DateTime> contractExpireAt
		{
			get
			{
				return this._contractExpireAt;
			}
			set
			{
				if ((this._contractExpireAt != value))
				{
					this._contractExpireAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractCount", DbType="Int")]
		public System.Nullable<int> contractCount
		{
			get
			{
				return this._contractCount;
			}
			set
			{
				if ((this._contractCount != value))
				{
					this._contractCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalSeniority", DbType="Float")]
		public System.Nullable<double> totalSeniority
		{
			get
			{
				return this._totalSeniority;
			}
			set
			{
				if ((this._totalSeniority != value))
				{
					this._totalSeniority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string departmentName
		{
			get
			{
				return this._departmentName;
			}
			set
			{
				if ((this._departmentName != value))
				{
					this._departmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffRemark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string staffRemark
		{
			get
			{
				return this._staffRemark;
			}
			set
			{
				if ((this._staffRemark != value))
				{
					this._staffRemark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExceptionHandled", DbType="Bit")]
		public System.Nullable<bool> isExceptionHandled
		{
			get
			{
				return this._isExceptionHandled;
			}
			set
			{
				if ((this._isExceptionHandled != value))
				{
					this._isExceptionHandled = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttendanceRecordDetailView")]
	public partial class AttendanceRecordDetailView
	{
		
		private int _id;
		
		private string _staffNr;
		
		private System.DateTime _recordAt;
		
		private System.Nullable<System.DateTime> _createdAt;
		
		private string _soureType;
		
		private bool _isCalculated;
		
		private string _name;
		
		private string _sex;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _ethnic;
		
		private System.Nullable<System.DateTime> _firstCompanyEmployAt;
		
		private System.Nullable<double> _totalCompanySeniority;
		
		private System.Nullable<System.DateTime> _companyEmployAt;
		
		private System.Nullable<double> _companySeniority;
		
		private int _workStatus;
		
		private bool _isOnTrial;
		
		private System.Nullable<System.DateTime> _trialOverAt;
		
		private System.Nullable<int> _companyId;
		
		private System.Nullable<int> _departmentId;
		
		private System.Nullable<int> _jobTitleId;
		
		private string _photo;
		
		private System.Nullable<int> _staffTypeId;
		
		private System.Nullable<int> _degreeTypeId;
		
		private string _speciality;
		
		private string _residenceAddress;
		
		private string _address;
		
		private string _staffId;
		
		private bool _isIdChecked;
		
		private string _phone;
		
		private string _contactName;
		
		private string _contactPhone;
		
		private string _contactFamilyMemberType;
		
		private string _domicile;
		
		private System.Nullable<int> _residenceType;
		
		private System.Nullable<int> _insureTypeId;
		
		private bool _isPayCPF;
		
		private System.Nullable<System.DateTime> _contractExpireAt;
		
		private System.Nullable<int> _contractCount;
		
		private System.Nullable<double> _totalSeniority;
		
		private string _staffRemark;
		
		private string _device;
		
		private string _departmentName;
		
		public AttendanceRecordDetailView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					this._staffNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recordAt", DbType="DateTime NOT NULL")]
		public System.DateTime recordAt
		{
			get
			{
				return this._recordAt;
			}
			set
			{
				if ((this._recordAt != value))
				{
					this._recordAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this._createdAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soureType", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string soureType
		{
			get
			{
				return this._soureType;
			}
			set
			{
				if ((this._soureType != value))
				{
					this._soureType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCalculated", DbType="Bit NOT NULL")]
		public bool isCalculated
		{
			get
			{
				return this._isCalculated;
			}
			set
			{
				if ((this._isCalculated != value))
				{
					this._isCalculated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(10)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this._sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this._birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ethnic", DbType="VarChar(50)")]
		public string ethnic
		{
			get
			{
				return this._ethnic;
			}
			set
			{
				if ((this._ethnic != value))
				{
					this._ethnic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstCompanyEmployAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> firstCompanyEmployAt
		{
			get
			{
				return this._firstCompanyEmployAt;
			}
			set
			{
				if ((this._firstCompanyEmployAt != value))
				{
					this._firstCompanyEmployAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalCompanySeniority", DbType="Float")]
		public System.Nullable<double> totalCompanySeniority
		{
			get
			{
				return this._totalCompanySeniority;
			}
			set
			{
				if ((this._totalCompanySeniority != value))
				{
					this._totalCompanySeniority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyEmployAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> companyEmployAt
		{
			get
			{
				return this._companyEmployAt;
			}
			set
			{
				if ((this._companyEmployAt != value))
				{
					this._companyEmployAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companySeniority", DbType="Float")]
		public System.Nullable<double> companySeniority
		{
			get
			{
				return this._companySeniority;
			}
			set
			{
				if ((this._companySeniority != value))
				{
					this._companySeniority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workStatus", DbType="Int NOT NULL")]
		public int workStatus
		{
			get
			{
				return this._workStatus;
			}
			set
			{
				if ((this._workStatus != value))
				{
					this._workStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOnTrial", DbType="Bit NOT NULL")]
		public bool isOnTrial
		{
			get
			{
				return this._isOnTrial;
			}
			set
			{
				if ((this._isOnTrial != value))
				{
					this._isOnTrial = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trialOverAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> trialOverAt
		{
			get
			{
				return this._trialOverAt;
			}
			set
			{
				if ((this._trialOverAt != value))
				{
					this._trialOverAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="Int")]
		public System.Nullable<int> companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this._companyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentId", DbType="Int")]
		public System.Nullable<int> departmentId
		{
			get
			{
				return this._departmentId;
			}
			set
			{
				if ((this._departmentId != value))
				{
					this._departmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitleId", DbType="Int")]
		public System.Nullable<int> jobTitleId
		{
			get
			{
				return this._jobTitleId;
			}
			set
			{
				if ((this._jobTitleId != value))
				{
					this._jobTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this._photo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffTypeId", DbType="Int")]
		public System.Nullable<int> staffTypeId
		{
			get
			{
				return this._staffTypeId;
			}
			set
			{
				if ((this._staffTypeId != value))
				{
					this._staffTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degreeTypeId", DbType="Int")]
		public System.Nullable<int> degreeTypeId
		{
			get
			{
				return this._degreeTypeId;
			}
			set
			{
				if ((this._degreeTypeId != value))
				{
					this._degreeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speciality", DbType="VarChar(200)")]
		public string speciality
		{
			get
			{
				return this._speciality;
			}
			set
			{
				if ((this._speciality != value))
				{
					this._speciality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenceAddress", DbType="VarChar(200)")]
		public string residenceAddress
		{
			get
			{
				return this._residenceAddress;
			}
			set
			{
				if ((this._residenceAddress != value))
				{
					this._residenceAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this._address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffId", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffId
		{
			get
			{
				return this._staffId;
			}
			set
			{
				if ((this._staffId != value))
				{
					this._staffId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isIdChecked", DbType="Bit NOT NULL")]
		public bool isIdChecked
		{
			get
			{
				return this._isIdChecked;
			}
			set
			{
				if ((this._isIdChecked != value))
				{
					this._isIdChecked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactName", DbType="VarChar(50)")]
		public string contactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if ((this._contactName != value))
				{
					this._contactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhone", DbType="VarChar(50)")]
		public string contactPhone
		{
			get
			{
				return this._contactPhone;
			}
			set
			{
				if ((this._contactPhone != value))
				{
					this._contactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactFamilyMemberType", DbType="VarChar(50)")]
		public string contactFamilyMemberType
		{
			get
			{
				return this._contactFamilyMemberType;
			}
			set
			{
				if ((this._contactFamilyMemberType != value))
				{
					this._contactFamilyMemberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domicile", DbType="VarChar(50)")]
		public string domicile
		{
			get
			{
				return this._domicile;
			}
			set
			{
				if ((this._domicile != value))
				{
					this._domicile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residenceType", DbType="Int")]
		public System.Nullable<int> residenceType
		{
			get
			{
				return this._residenceType;
			}
			set
			{
				if ((this._residenceType != value))
				{
					this._residenceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insureTypeId", DbType="Int")]
		public System.Nullable<int> insureTypeId
		{
			get
			{
				return this._insureTypeId;
			}
			set
			{
				if ((this._insureTypeId != value))
				{
					this._insureTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPayCPF", DbType="Bit NOT NULL")]
		public bool isPayCPF
		{
			get
			{
				return this._isPayCPF;
			}
			set
			{
				if ((this._isPayCPF != value))
				{
					this._isPayCPF = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractExpireAt", DbType="Date")]
		public System.Nullable<System.DateTime> contractExpireAt
		{
			get
			{
				return this._contractExpireAt;
			}
			set
			{
				if ((this._contractExpireAt != value))
				{
					this._contractExpireAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractCount", DbType="Int")]
		public System.Nullable<int> contractCount
		{
			get
			{
				return this._contractCount;
			}
			set
			{
				if ((this._contractCount != value))
				{
					this._contractCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalSeniority", DbType="Float")]
		public System.Nullable<double> totalSeniority
		{
			get
			{
				return this._totalSeniority;
			}
			set
			{
				if ((this._totalSeniority != value))
				{
					this._totalSeniority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffRemark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string staffRemark
		{
			get
			{
				return this._staffRemark;
			}
			set
			{
				if ((this._staffRemark != value))
				{
					this._staffRemark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_device", DbType="VarChar(50)")]
		public string device
		{
			get
			{
				return this._device;
			}
			set
			{
				if ((this._device != value))
				{
					this._device = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string departmentName
		{
			get
			{
				return this._departmentName;
			}
			set
			{
				if ((this._departmentName != value))
				{
					this._departmentName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageRecordView")]
	public partial class MessageRecordView
	{
		
		private int _id;
		
		private string _staffNr;
		
		private System.Nullable<int> _operatorId;
		
		private System.Nullable<int> _messageType;
		
		private System.Nullable<System.DateTime> _createdAt;
		
		private string _text;
		
		private System.Nullable<bool> _isRead;
		
		private System.Nullable<bool> _isHandled;
		
		private System.Nullable<int> _messageCategory;
		
		private string _uniqString;
		
		private string _operatorName;
		
		private string _operatorEmail;
		
		private string _staffName;
		
		public MessageRecordView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200)")]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					this._staffNr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorId", DbType="Int")]
		public System.Nullable<int> operatorId
		{
			get
			{
				return this._operatorId;
			}
			set
			{
				if ((this._operatorId != value))
				{
					this._operatorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageType", DbType="Int")]
		public System.Nullable<int> messageType
		{
			get
			{
				return this._messageType;
			}
			set
			{
				if ((this._messageType != value))
				{
					this._messageType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this._createdAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this._text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRead", DbType="Bit")]
		public System.Nullable<bool> isRead
		{
			get
			{
				return this._isRead;
			}
			set
			{
				if ((this._isRead != value))
				{
					this._isRead = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHandled", DbType="Bit")]
		public System.Nullable<bool> isHandled
		{
			get
			{
				return this._isHandled;
			}
			set
			{
				if ((this._isHandled != value))
				{
					this._isHandled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageCategory", DbType="Int")]
		public System.Nullable<int> messageCategory
		{
			get
			{
				return this._messageCategory;
			}
			set
			{
				if ((this._messageCategory != value))
				{
					this._messageCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uniqString", DbType="VarChar(255)")]
		public string uniqString
		{
			get
			{
				return this._uniqString;
			}
			set
			{
				if ((this._uniqString != value))
				{
					this._uniqString = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorName", DbType="VarChar(50)")]
		public string operatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this._operatorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorEmail", DbType="VarChar(50)")]
		public string operatorEmail
		{
			get
			{
				return this._operatorEmail;
			}
			set
			{
				if ((this._operatorEmail != value))
				{
					this._operatorEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffName", DbType="VarChar(50)")]
		public string staffName
		{
			get
			{
				return this._staffName;
			}
			set
			{
				if ((this._staffName != value))
				{
					this._staffName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbsenceRecrod")]
	public partial class AbsenceRecrod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _absenceTypeId;
		
		private string _staffNr;
		
		private double _duration;
		
		private int _durationType;
		
		private string _remark;
		
		private System.Nullable<System.DateTime> _absenceDate;
		
		private EntityRef<AbsenceType> _AbsenceType;
		
		private EntityRef<Staff> _Staff;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnabsenceTypeIdChanging(int value);
    partial void OnabsenceTypeIdChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OndurationChanging(double value);
    partial void OndurationChanged();
    partial void OndurationTypeChanging(int value);
    partial void OndurationTypeChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnabsenceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnabsenceDateChanged();
    #endregion
		
		public AbsenceRecrod()
		{
			this._AbsenceType = default(EntityRef<AbsenceType>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_absenceTypeId", DbType="Int NOT NULL")]
		public int absenceTypeId
		{
			get
			{
				return this._absenceTypeId;
			}
			set
			{
				if ((this._absenceTypeId != value))
				{
					if (this._AbsenceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnabsenceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._absenceTypeId = value;
					this.SendPropertyChanged("absenceTypeId");
					this.OnabsenceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Float NOT NULL")]
		public double duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationType", DbType="Int NOT NULL")]
		public int durationType
		{
			get
			{
				return this._durationType;
			}
			set
			{
				if ((this._durationType != value))
				{
					this.OndurationTypeChanging(value);
					this.SendPropertyChanging();
					this._durationType = value;
					this.SendPropertyChanged("durationType");
					this.OndurationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_absenceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> absenceDate
		{
			get
			{
				return this._absenceDate;
			}
			set
			{
				if ((this._absenceDate != value))
				{
					this.OnabsenceDateChanging(value);
					this.SendPropertyChanging();
					this._absenceDate = value;
					this.SendPropertyChanged("absenceDate");
					this.OnabsenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AbsenceType_AbsenceRecrod", Storage="_AbsenceType", ThisKey="absenceTypeId", OtherKey="id", IsForeignKey=true)]
		public AbsenceType AbsenceType
		{
			get
			{
				return this._AbsenceType.Entity;
			}
			set
			{
				AbsenceType previousValue = this._AbsenceType.Entity;
				if (((previousValue != value) 
							|| (this._AbsenceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AbsenceType.Entity = null;
						previousValue.AbsenceRecrod.Remove(this);
					}
					this._AbsenceType.Entity = value;
					if ((value != null))
					{
						value.AbsenceRecrod.Add(this);
						this._absenceTypeId = value.id;
					}
					else
					{
						this._absenceTypeId = default(int);
					}
					this.SendPropertyChanged("AbsenceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_AbsenceRecrod", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.AbsenceRecrod.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.AbsenceRecrod.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtraWorkType")]
	public partial class ExtraWorkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _remark;
		
		private EntitySet<ExtraWorkRecord> _ExtraWorkRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public ExtraWorkType()
		{
			this._ExtraWorkRecord = new EntitySet<ExtraWorkRecord>(new Action<ExtraWorkRecord>(this.attach_ExtraWorkRecord), new Action<ExtraWorkRecord>(this.detach_ExtraWorkRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="VarChar(255)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtraWorkType_ExtraWorkRecord", Storage="_ExtraWorkRecord", ThisKey="id", OtherKey="extraWorkTypeId")]
		public EntitySet<ExtraWorkRecord> ExtraWorkRecord
		{
			get
			{
				return this._ExtraWorkRecord;
			}
			set
			{
				this._ExtraWorkRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtraWorkRecord(ExtraWorkRecord entity)
		{
			this.SendPropertyChanging();
			entity.ExtraWorkType = this;
		}
		
		private void detach_ExtraWorkRecord(ExtraWorkRecord entity)
		{
			this.SendPropertyChanging();
			entity.ExtraWorkType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtraWorkRecord")]
	public partial class ExtraWorkRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _extraWorkTypeId;
		
		private string _staffNr;
		
		private double _duration;
		
		private int _durationType;
		
		private string _otReason;
		
		private EntityRef<ExtraWorkType> _ExtraWorkType;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnextraWorkTypeIdChanging(int value);
    partial void OnextraWorkTypeIdChanged();
    partial void OnstaffNrChanging(string value);
    partial void OnstaffNrChanged();
    partial void OndurationChanging(double value);
    partial void OndurationChanged();
    partial void OndurationTypeChanging(int value);
    partial void OndurationTypeChanged();
    partial void OnotReasonChanging(string value);
    partial void OnotReasonChanged();
    #endregion
		
		public ExtraWorkRecord()
		{
			this._ExtraWorkType = default(EntityRef<ExtraWorkType>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extraWorkTypeId", DbType="Int NOT NULL")]
		public int extraWorkTypeId
		{
			get
			{
				return this._extraWorkTypeId;
			}
			set
			{
				if ((this._extraWorkTypeId != value))
				{
					if (this._ExtraWorkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnextraWorkTypeIdChanging(value);
					this.SendPropertyChanging();
					this._extraWorkTypeId = value;
					this.SendPropertyChanged("extraWorkTypeId");
					this.OnextraWorkTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffNr", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string staffNr
		{
			get
			{
				return this._staffNr;
			}
			set
			{
				if ((this._staffNr != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstaffNrChanging(value);
					this.SendPropertyChanging();
					this._staffNr = value;
					this.SendPropertyChanged("staffNr");
					this.OnstaffNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="Float NOT NULL")]
		public double duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationType", DbType="Int NOT NULL")]
		public int durationType
		{
			get
			{
				return this._durationType;
			}
			set
			{
				if ((this._durationType != value))
				{
					this.OndurationTypeChanging(value);
					this.SendPropertyChanging();
					this._durationType = value;
					this.SendPropertyChanged("durationType");
					this.OndurationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otReason", DbType="VarChar(255)")]
		public string otReason
		{
			get
			{
				return this._otReason;
			}
			set
			{
				if ((this._otReason != value))
				{
					this.OnotReasonChanging(value);
					this.SendPropertyChanging();
					this._otReason = value;
					this.SendPropertyChanged("otReason");
					this.OnotReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtraWorkType_ExtraWorkRecord", Storage="_ExtraWorkType", ThisKey="extraWorkTypeId", OtherKey="id", IsForeignKey=true)]
		public ExtraWorkType ExtraWorkType
		{
			get
			{
				return this._ExtraWorkType.Entity;
			}
			set
			{
				ExtraWorkType previousValue = this._ExtraWorkType.Entity;
				if (((previousValue != value) 
							|| (this._ExtraWorkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtraWorkType.Entity = null;
						previousValue.ExtraWorkRecord.Remove(this);
					}
					this._ExtraWorkType.Entity = value;
					if ((value != null))
					{
						value.ExtraWorkRecord.Add(this);
						this._extraWorkTypeId = value.id;
					}
					else
					{
						this._extraWorkTypeId = default(int);
					}
					this.SendPropertyChanged("ExtraWorkType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_ExtraWorkRecord", Storage="_Staff", ThisKey="staffNr", OtherKey="nr", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.ExtraWorkRecord.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.ExtraWorkRecord.Add(this);
						this._staffNr = value.nr;
					}
					else
					{
						this._staffNr = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachment")]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _attachmentType;
		
		private string _path;
		
		private System.Nullable<int> _attachmentAbleId;
		
		private string _attachmentAbleType;
		
		private System.Nullable<int> _certificateId;
		
		private EntityRef<Certificate> _Certificate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnattachmentTypeChanging(int value);
    partial void OnattachmentTypeChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnattachmentAbleIdChanging(System.Nullable<int> value);
    partial void OnattachmentAbleIdChanged();
    partial void OnattachmentAbleTypeChanging(string value);
    partial void OnattachmentAbleTypeChanged();
    partial void OncertificateIdChanging(System.Nullable<int> value);
    partial void OncertificateIdChanged();
    #endregion
		
		public Attachment()
		{
			this._Certificate = default(EntityRef<Certificate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachmentType", DbType="Int NOT NULL")]
		public int attachmentType
		{
			get
			{
				return this._attachmentType;
			}
			set
			{
				if ((this._attachmentType != value))
				{
					this.OnattachmentTypeChanging(value);
					this.SendPropertyChanging();
					this._attachmentType = value;
					this.SendPropertyChanged("attachmentType");
					this.OnattachmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(200)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachmentAbleId", DbType="Int")]
		public System.Nullable<int> attachmentAbleId
		{
			get
			{
				return this._attachmentAbleId;
			}
			set
			{
				if ((this._attachmentAbleId != value))
				{
					this.OnattachmentAbleIdChanging(value);
					this.SendPropertyChanging();
					this._attachmentAbleId = value;
					this.SendPropertyChanged("attachmentAbleId");
					this.OnattachmentAbleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attachmentAbleType", DbType="VarChar(50)")]
		public string attachmentAbleType
		{
			get
			{
				return this._attachmentAbleType;
			}
			set
			{
				if ((this._attachmentAbleType != value))
				{
					this.OnattachmentAbleTypeChanging(value);
					this.SendPropertyChanging();
					this._attachmentAbleType = value;
					this.SendPropertyChanged("attachmentAbleType");
					this.OnattachmentAbleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_certificateId", DbType="Int")]
		public System.Nullable<int> certificateId
		{
			get
			{
				return this._certificateId;
			}
			set
			{
				if ((this._certificateId != value))
				{
					if (this._Certificate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncertificateIdChanging(value);
					this.SendPropertyChanging();
					this._certificateId = value;
					this.SendPropertyChanged("certificateId");
					this.OncertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Certificate_Attachment", Storage="_Certificate", ThisKey="certificateId", OtherKey="id", IsForeignKey=true)]
		public Certificate Certificate
		{
			get
			{
				return this._Certificate.Entity;
			}
			set
			{
				Certificate previousValue = this._Certificate.Entity;
				if (((previousValue != value) 
							|| (this._Certificate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Certificate.Entity = null;
						previousValue.Attachments.Remove(this);
					}
					this._Certificate.Entity = value;
					if ((value != null))
					{
						value.Attachments.Add(this);
						this._certificateId = value.id;
					}
					else
					{
						this._certificateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Certificate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
